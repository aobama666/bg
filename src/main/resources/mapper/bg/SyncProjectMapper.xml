<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.sgcc.bg.mapper.SyncProjectMapper">

	<select id="queryProjectNoteInfo" resultType="java.util.Map">
		SELECT       DISTINCT  N.DEPTCODE  ,
		                         D.DEPTNAME
	    FROM    BG_SYNC_PROJECT_NOTE   N
	    LEFT JOIN BG_SYS_DEPT   D   ON D.DEPTCODE = N.DEPTCODE  where  N.VALID='1'  AND   N.PROJECT_TYPE=#{ProjectType}
	</select>

	<select id="queryDataDictionaryInfo" resultType="java.util.Map">
		SELECT  CODE,NAME  from  BG_SYS_DATADICTIONARY  where VAILD='1'  and  PID = #{pid}   ORDER BY SORT_ID DESC
	</select>

	<select id="queryDeptInfo" resultType="java.util.Map">
        SELECT  *  from  BG_SYS_DEPT  where VALID='1'  and  DEPTCODE = #{deptCode}
	</select>

	<select id="queryAuditoriginInfo" resultType="java.util.Map">
		SELECT  SYSNAME,SYSKEY  from  BG_SYS_AUDITORIGIN  where   SYSNAME = #{key}
	</select>

	<sql id="projectInfo">
		SELECT
		PRJ. ID AS projectId,
		PRJ.PROJECT_NUMBER AS projectNumber,
		PRJ.PROJECT_NAME AS projectName,
		PRJ.WBS_NUMBER AS wbsNumber,
		TO_CHAR (TM.workTime, 'yyyy') AS YEAR,
		TO_CHAR (TM.workTime, 'MM') AS MONTH,
		prj.project_grade AS projectGrade,
		D .deptcode AS deptCode,
		D .pdeptcode AS pdeptCode,
		D .TYPE,
		TO_CHAR (TM.workTime, 'yyyy')||TO_CHAR (TM.workTime, 'MM') AS datas
		FROM
		(
		SELECT
		M .PROJECT_ID,
		M .workTime,
		SU.USERID,
		R.DEPTID,
		U .END_DATE U_END_DATE,
		(
		SELECT
		MAX (PU.END_DATE)
		FROM
		BG_PROJECT_USER PU
		WHERE
		M .PROJECT_ID = PU.PROJECT_ID
		AND PU. ROLE = '1'
		AND PU.STATUS = '1'
		AND M .workTime2 BETWEEN TO_CHAR (PU.START_DATE, 'yyyy-MM')
		AND TO_CHAR (PU.END_DATE, 'yyyy-MM')
		) U_MAX_END_DATE,
		R. ID R_ID,
		(
		SELECT
		RT. ID
		FROM
		BG_SYS_USER_DEPT_RELATION RT
		WHERE
		RT.USERID = R.USERID
		AND RT.VALID = 1
		AND M .workTime BETWEEN RT.EXP_START_TIME
		AND RT.EXP_END_TIME
		AND (
		(
		RT.SRC = 0
		AND NOT EXISTS (
		SELECT
		R1.USERID
		FROM
		BG_SYS_USER_DEPT_RELATION R1
		WHERE
		R1.USERID = RT.USERID
		AND M .workTime BETWEEN R1.EXP_START_TIME
		AND R1.EXP_END_TIME
		AND R1.VALID = 1
		AND R1.SRC = 1
		)
		)
		OR RT.SRC IN (1, 2)
		)
		) R_ID_VAILD
		FROM
		( SELECT SS1.PROJECT_ID,
		last_day(to_date(SS1.workTime, 'yyyy-MM')) workTime,
		SS1.workTime workTime2
		FROM (SELECT T1.PROJECT_ID, t1.workTime,max(t1.workTime) over(partition by T1.PROJECT_ID) as max_workTime
		FROM (SELECT T.PROJECT_ID,
		TO_CHAR(T.WORK_TIME_END, 'yyyy-MM') as workTime
		FROM BG_WORKINGHOUR_INFO T
		LEFT JOIN BG_PROJECT_INFO P
		ON P.ID = T.PROJECT_ID
		WHERE T.VALID = 1
		AND T.STATUS = '3'
		AND P.STATUS = '1'
		AND P.CATEGORY != 'BP'
		<if  test="projectType!= null and projectType!= ''">
			AND  P.PROJECT_GRADE    =      #{projectType}
		</if>
		<if  test="beginDate!= null and beginDate!= ''">
			AND  TO_CHAR(T.WORK_TIME_END, 'yyyy-MM') &gt;=  TO_CHAR(TO_DATE(#{beginDate}, 'yyyy-MM-dd'),'yyyy-MM')
		</if>
		<if  test="endDate!= null and endDate!= ''">
			AND  TO_CHAR(T.WORK_TIME_END, 'yyyy-MM') &lt;= TO_CHAR(TO_DATE(#{endDate}, 'yyyy-MM-dd'),'yyyy-MM')
		</if>
		UNION
		SELECT P1.ID PROJECT_ID,
		TO_CHAR(T.WORK_TIME_END, 'yyyy-MM') as workTime
		FROM BG_WORKINGHOUR_INFO T
		LEFT JOIN BG_PROJECT_INFO P
		ON P.ID = T.PROJECT_ID
		LEFT JOIN BG_PROJECT_INFO P1
		ON P.RELATED_PROJECT_ID = P1.ID
		WHERE T.VALID = 1
		AND T.STATUS = '3'
		AND P.STATUS = '1'
		AND P1.STATUS = '1'
		AND P.CATEGORY = 'BP1'
		<if  test="projectType!= null and projectType!= ''">
			AND  P.PROJECT_GRADE    =      #{projectType}
		</if>
		<if  test="beginDate!= null and beginDate!= ''">
			AND  TO_CHAR(T.WORK_TIME_END, 'yyyy-MM') &gt;=  TO_CHAR(TO_DATE(#{beginDate}, 'yyyy-MM-dd'),'yyyy-MM')
		</if>
		<if  test="endDate!= null and endDate!= ''">
			AND  TO_CHAR(T.WORK_TIME_END, 'yyyy-MM') &lt;= TO_CHAR(TO_DATE(#{endDate}, 'yyyy-MM-dd'),'yyyy-MM')
		</if>
		)
		T1) SS1
		WHERE SS1.WORKTIME = SS1.max_workTime
		) M
		LEFT JOIN BG_PROJECT_USER U ON M .PROJECT_ID = U .PROJECT_ID
		AND U . ROLE = '1'
		AND U .STATUS = '1'
		AND M .workTime2 BETWEEN TO_CHAR (U .START_DATE, 'yyyy-MM')
		AND TO_CHAR (U .END_DATE, 'yyyy-MM')
		LEFT JOIN BG_SYS_USER SU ON SU.HRCODE = U .HRCODE
		AND SU.VALID = 1
		AND ROWNUM = 1
		LEFT JOIN BG_SYS_USER_DEPT_RELATION R ON R.USERID = SU.USERID
		AND R.VALID = 1
		AND M .workTime BETWEEN R.EXP_START_TIME
		AND R.EXP_END_TIME
		WHERE
		1 = 1
		) TM
		LEFT JOIN BG_PROJECT_INFO PRJ ON PRJ. ID = TM.PROJECT_ID
		LEFT JOIN BG_SYS_DEPT D ON D .DEPTID = TM.DEPTID
		WHERE
		1 = 1
		AND TM.R_ID = TM.R_ID_VAILD
		AND TM.U_END_DATE = TM.U_MAX_END_DATE
		<if  test='projectType.toString() != "YJ"'>
			<if  test='type.toString() == "1"'>
				AND DECODE(D.TYPE,2,d.pdeptcode,1,D.DEPTCODE) =  #{deptCode}
			</if>
			<if  test='type.toString() == "2"'>
				AND DECODE(D.TYPE,2,d.deptcode,1,D.DEPTCODE) =  #{deptCode}
			</if>
		</if>
	</sql>

	<select id="queryProjectInfo" resultType="java.util.Map">
		SELECT
		projectNumber  as  "projectNumber",
		projectName   as  "projectName",
		wbsNumber  as  "wbsNumber",
		projectGrade   as  "projectGrade",
		deptCode  as  "deptCode"
		FROM (<include refid="projectInfo"/>)
	</select>







	<insert id="addProjectNode"  parameterType="java.util.HashMap">
		INSERT INTO BG_SYNC_PROJECT_NOTE (
		UUID,
		BEGINDATE,
		ENDDATE,
		PROJECT_TYPE,
		DEPTCODE,
        CREATE_DATE,
        UPDATE_DATE,
        CREATE_USER,
        UPDATE_USER,
        VALID,
        KEY,
        BATCHID
		)
		VALUES(
		#{projectNode.id},
		#{projectNode.beginDate},
		#{projectNode.endDate},
		#{projectNode.projectType},
		#{projectNode.deptCode},
		#{projectNode.createTime},
		#{projectNode.updateTime},
		#{projectNode.createUser},
		#{projectNode.updateUser},
		#{projectNode.valid},
		#{projectNode.key},
		#{projectNode.batchId}
		)
	</insert>

	<insert id="addProjectInfo"  parameterType="java.util.HashMap">
		INSERT INTO BG_SYNC_PROJECT (
		UUID,
		PROJECT_NOTEID,
		PROJECT_NUMBER,
		PROJECT_NAME,
		WBS_NUMBER,
		PROJECT_GRADE,
		DEPTCODE,
        VALID
		)
		VALUES(
		#{projectInfo.uuid},
		#{projectInfo.projectNodeId},
		#{projectInfo.projectNumber},
		#{projectInfo.projectName},
		#{projectInfo.wbsNumber},
		#{projectInfo.projectGrade},
		#{projectInfo.deptCode},
		#{projectInfo.valid}
		)
	</insert>

	<sql id="projectNoteInfo">
		SELECT
		N.UUID,
		N.BEGINDATE,
		N.ENDDATE,
		N.PROJECT_TYPE,
		DECODE(N.PROJECT_TYPE,'YJ','院级','BMJ','部门级','CSJ','处室级') PROJECT_TYPE_NAME,
		N.DEPTCODE,
		TO_CHAR(N.CREATE_DATE,'YYYY-MM-DD HH:MI:SS')  CREATE_DATE,
		D.DEPTNAME,
		N.BATCHID
		FROM    BG_SYNC_PROJECT_NOTE   N
		LEFT JOIN BG_SYS_DEPT   D   ON D.DEPTCODE = N.DEPTCODE  where  N.VALID='1'
		<if  test="projectNode.beginDate!= null and projectNode.beginDate!= ''">
			AND TO_DATE(N.BEGINDATE, 'yyyy-MM-dd')   &gt;=    TO_DATE( #{projectNode.beginDate}, 'yyyy-MM-dd')
		</if>
		<if  test="projectNode.endDate!= null and projectNode.endDate!= ''">
			AND TO_DATE(N.ENDDATE, 'yyyy-MM-dd')      &lt;=     TO_DATE( #{projectNode.endDate}, 'yyyy-MM-dd')
		</if>
		<if  test="projectNode.projectType!= null and projectNode.projectType!= ''">
			AND N.PROJECT_TYPE     =      #{projectNode.projectType}
		</if>
		<if  test="projectNode.deptCode!= null and projectNode.deptCode!= ''">
			AND N.DEPTCODE     =      #{projectNode.deptCode}
		</if>
		ORDER BY N.CREATE_DATE  DESC
	</sql>

	<select id="selectProjectNoteInfo" resultType="java.util.Map">
			SELECT  T.*  from(
			SELECT  TB.* , ROWNUM AS ROWNO  from(
			<include refid="projectNoteInfo"/>
			) TB  WHERE #{projectNode.page_end} >= ROWNUM
			) T   WHERE T.ROWNO > #{projectNode.page_start}
	</select>

	<select id="selectProjectNoteInfoNum" resultType="java.lang.String" parameterType="java.util.HashMap" >
		SELECT    COUNT(1)  AS "countNum"  from(<include refid="projectNoteInfo"/>)
	</select>





	<sql id="projectDetailsInfo">
		SELECT
		P.UUID,
		P.PROJECT_NUMBER,
		P.PROJECT_NAME,
		P.WBS_NUMBER,
		P.PROJECT_GRADE,
		DECODE(P.PROJECT_GRADE,'YJ','院级','BMJ','部门级','CSJ','处室级') PROJECT_GRADE_NAME,
		P.DEPTCODE,
		D.DEPTNAME,
		N.BEGINDATE,
		N.ENDDATE,
		P.PROJECT_NOTEID
		FROM    BG_SYNC_PROJECT   P
		LEFT JOIN BG_SYS_DEPT   D   ON D.DEPTCODE = P.DEPTCODE
		LEFT JOIN BG_SYNC_PROJECT_NOTE   N   ON N.UUID = P.PROJECT_NOTEID
		where  P.VALID='1'

		<if  test="projectDetails.projectName!= null and projectDetails.projectName!= ''">
			AND P.PROJECT_NAME like '%'||#{projectDetails.projectName}||'%'
		</if>
		<if  test="projectDetails.projectNumber!= null and projectDetails.projectNumber!= ''">
			AND P.PROJECT_NUMBER like '%'||#{projectDetails.projectNumber}||'%'
		</if>
		<if  test="projectDetails.wbsNumber!= null and projectDetails.wbsNumber!= ''">
			AND P.WBS_NUMBER like '%'||#{projectDetails.wbsNumber}||'%'
		</if>
		<if  test="projectDetails.noteId!= null and projectDetails.noteId!= ''">
			AND P.PROJECT_NOTEID     =      #{projectDetails.noteId}
		</if>
		ORDER BY P.YEAR ,P.MONTH,P.PROJECT_NAME
	</sql>

	<select id="selectProjectDetailsInfo" resultType="java.util.Map">
		SELECT  T.*  from(
		SELECT  TB.* , ROWNUM AS ROWNO  from(
		<include refid="projectDetailsInfo"/>
		) TB  WHERE #{projectDetails.page_end} >= ROWNUM
		) T   WHERE T.ROWNO > #{projectDetails.page_start}
	</select>

	<select id="selectProjectDetailsInfoNum" resultType="java.lang.String" parameterType="java.util.HashMap" >
		SELECT    COUNT(1)  AS "countNum"  from(<include refid="projectDetailsInfo"/>)
	</select>

	<select id="selectForProjectNumber" resultType="java.util.Map"   >
		SELECT
		DISTINCT	 PROJECT_NUMBER
		from(<include refid="projectDetailsInfo"/>)
	</select>
</mapper>