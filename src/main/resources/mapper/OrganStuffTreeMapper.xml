<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 
	namespace：必须与对应的接口全类名一致
	id:必须与对应接口的某个对应的方法名一致
 -->
<mapper namespace="com.sgcc.bg.mapper.OrganStuffTreeMapper">	



	<!--  获取组织树权限 -->
    <select id="getUserOrganPrivilege" resultType="java.util.Map">
		SELECT DISTINCT T.DEPTID,
		       T.PDEPTID,
		       T.DEPTCODE,
		       T.DEPTNAME,
		       T.PDEPTCODE,
		       T.PDEPTNAME,
		       T.TYPE
		  FROM BG_SYS_DEPT T
		 WHERE 1 = 1
		 	<if test="(deptPriv!=null and deptPriv!='' and deptPriv.length>2) or (labPriv!=null and labPriv!='' and labPriv.length>2)">
			   AND ( 
			   <if test="deptPriv!=null and deptPriv.length>0">
				   T.DEPTID IN (${deptPriv})
				   OR T.PDEPTID IN (${deptPriv})
				   OR T.DEPTID = NVL((SELECT DEPTID FROM BG_SYS_DEPT WHERE DEPTCODE = #{rootId, jdbcType = VARCHAR}),'XXX')
			   </if>
			   <if test="deptPriv!=null and deptPriv!='' and deptPriv.length>2 and labPriv!=null and labPriv!='' and labPriv.length>2">
				   OR T.DEPTID IN (${labPriv})
				   OR T.DEPTID = NVL((SELECT DEPTID FROM BG_SYS_DEPT WHERE DEPTCODE = #{rootId, jdbcType = VARCHAR}),'XXX')
			   </if>
			   <if test="(deptPriv==null or deptPriv=='' ) and labPriv!=null and labPriv!='' and labPriv.length>2">
				   T.DEPTID IN (${labPriv})
				   OR T.DEPTID = NVL((SELECT DEPTID FROM BG_SYS_DEPT WHERE DEPTCODE = #{rootId, jdbcType = VARCHAR}),'XXX')
			   </if>
			       )
		    </if>
		 </select>  


    <!--  获取组织树 -->
    <select id="getAllOrganTree" resultType="java.util.Map">
    	SELECT T.DEPTID,
		       T.PDEPTID,
		       T.DEPTCODE,
		       T.DEPTNAME,
		       T.PDEPTCODE,
		       T.PDEPTNAME,
		       T.TYPE,
		       'ORGAN' DATATYPE,		       
		       <choose>
					<when test="level!=null and level == '0'">
					    0
					</when>
					<when test="level!=null and level == '1'">
					    CASE WHEN T.TYPE = 1 THEN 0
					         ELSE  (SELECT COUNT(S.DEPTID)
							          FROM (SELECT *
									          FROM BG_SYS_DEPT D1
									         WHERE 1 = 1
									           <if test="limit!=null and limit!='' and limit.length>2">
											    AND D1.DEPTID IN (${limit})
											   </if>
											   <if test="level!=null and level!=''">
											   	AND #{level, jdbcType = DOUBLE} >= NVL(D1.TYPE, 0)  
											   </if>
									        ) S
							         WHERE S.PDEPTCODE = T.DEPTCODE
							           AND S.DEPTCODE IS NOT NULL
							           AND S.VALID = 1)
							  END
					</when>
					<otherwise>
					   (SELECT COUNT(S.DEPTID)
				          FROM (SELECT *
						          FROM BG_SYS_DEPT D1
						         WHERE 1 = 1
						           <if test="limit!=null and limit!=''">
								    AND D1.DEPTID IN (${limit})
								   </if>
								   <if test="level!=null and level!=''">
								   	AND #{level} >= D1.TYPE 
								   </if>
						        ) S
				         WHERE S.PDEPTCODE = T.DEPTCODE
				           AND S.DEPTCODE IS NOT NULL
				           AND S.VALID = 1)
					 </otherwise>
				</choose>
		        CHILD_NUM
		  FROM (SELECT *
		          FROM BG_SYS_DEPT D1
		         WHERE 1 = 1
		           <if test="limit!=null and limit!=''">
				    AND D1.DEPTID IN (${limit})
				   </if>
				   <if test="level!=null and level!=''">
				   	AND #{level} >= D1.TYPE 
				   </if>
		        ) T
		 WHERE T.DEPTCODE IS NOT NULL
		   AND T.VALID = 1
		 START WITH T.DEPTID = NVL((SELECT DEPTID FROM BG_SYS_DEPT WHERE DEPTCODE = #{rootId, jdbcType = VARCHAR}),'XXX')
		CONNECT BY PRIOR T.DEPTID = T.PDEPTID
		 ORDER SIBLINGS BY T.SORT_ID NULLS LAST
    </select>
    <!--  初始化人员树 -->
    <select id="initUserTree" resultType="java.util.Map">
		SELECT T.DEPTID,
		       T.PDEPTID,
		       T.DEPTCODE,
		       T.DEPTNAME,
		       T.PDEPTCODE,
		       T.TYPE,
		       'ORGAN' DATATYPE,
		       ((SELECT COUNT(S.DEPTID)
		           FROM BG_SYS_DEPT S
		          WHERE S.PDEPTCODE = T.DEPTCODE
		            AND S.DEPTCODE IS NOT NULL
		            AND S.VALID = 1) +
		       (SELECT COUNT(R.USERID)
		           FROM BG_SYS_USER_DEPT_RELATION R
		          INNER JOIN BG_SYS_USER BU
		             ON BU.USERID = R.USERID	
		            AND BU.HRCODE IS NOT NULL	           
		            AND BU.STATE = 0
		            AND BU.VALID = 1
		          INNER JOIN BG_SYS_DEPT BD
					 ON BD.DEPTID = R.DEPTID
					AND BD.VALID = 1
		          WHERE R.DEPTID = T.DEPTID
		            AND SYSDATE BETWEEN R.EXP_START_TIME AND R.EXP_END_TIME
		            AND ((R.SRC = 0 AND NOT EXISTS
		                 (SELECT R1.USERID
		                     FROM BG_SYS_USER_DEPT_RELATION R1                   
		                    WHERE R1.USERID = R.USERID
		                      AND SYSDATE BETWEEN R1.EXP_START_TIME AND
		                          R1.EXP_END_TIME
		                      AND R1.VALID = 1
		                      AND R1.SRC = 1)) OR R.SRC IN (1, 2))  <!-- 组织下人员：1、2 人资定义、自定义 直接获取，0 ERP时，如果与人资重复，取人资，否则取ERP -->
		            AND R.VALID = 1)) CHILD_NUM  <!-- 子节点数量  组织+人员-->
		  FROM BG_SYS_DEPT T
		 WHERE T.DEPTCODE IS NOT NULL
		   AND T.VALID = 1
		 START WITH T.DEPTID = NVL((SELECT DEPTID FROM BG_SYS_DEPT WHERE DEPTCODE = #{rootId, jdbcType = VARCHAR}),'XXX')
		CONNECT BY PRIOR T.DEPTID = T.PDEPTID
		 ORDER SIBLINGS BY T.SORT_ID NULLS LAST
    </select>
    <!--  获取人员树  局部加载 -->
    <select id="getUserTreeByOrgan" resultType="java.util.Map">
		SELECT U.USERID  USERID,
		       U.USERNAME DEPTID,
		       BD.DEPTID PDEPTID,
		       'P'||U.HRCODE DEPTCODE,
		       U.USERALIAS DEPTNAME,
		       BD.PDEPTCODE PDEPTCODE,
		       2 TYPE,
		       'PERSION' DATATYPE,
		       0 CHILD_NUM
		  FROM BG_SYS_USER_DEPT_RELATION R
		 INNER JOIN BG_SYS_USER U
		    ON U.USERID = R.USERID	
		   AND U.HRCODE IS NOT NULL	  
		   AND U.VALID = 1
		   AND U.STATE = 0
		 INNER JOIN BG_SYS_DEPT BD
		   ON BD.DEPTID = R.DEPTID
		  AND BD.VALID = 1
		 WHERE 1 = 1
		   AND R.DEPTID = #{organId, jdbcType = VARCHAR}
		   AND SYSDATE BETWEEN R.EXP_START_TIME AND R.EXP_END_TIME
		   AND ((R.SRC = 0 AND NOT EXISTS
		        (SELECT R1.USERID
		            FROM BG_SYS_USER_DEPT_RELATION R1
		           WHERE R1.USERID = R.USERID
		             AND R1.SRC = 1
		             AND SYSDATE BETWEEN R1.EXP_START_TIME AND R1.EXP_END_TIME
		             AND R1.VALID = 1)) OR R.SRC IN (1, 2))
		   AND R.VALID = 1
		 ORDER BY U.SORT_ID NULLS LAST
    </select>	
    <!--  获取人员树  模糊查询 -->
    <select id="getUserTreeByUser" resultType="java.util.Map">
		SELECT T.DEPTID,T.PDEPTID,T.DEPTCODE, T.DEPTNAME, T.PDEPTCODE, T.TYPE, T.DATATYPE, T.CHILD_NUM
		  FROM (SELECT D.DEPTID,
		               D.PDEPTID,
		               D.DEPTCODE,
		               D.DEPTNAME,
		               D.PDEPTCODE,
		               D.TYPE,
		               'ORGAN' DATATYPE,
		               1 CHILD_NUM,
		               D.SORT_ID
		          FROM BG_SYS_DEPT D,
		               (SELECT DISTINCT DEPTID
		                  FROM (SELECT T1.DEPTID
		                          FROM BG_SYS_DEPT T1
		                         WHERE T1.DEPTCODE IS NOT NULL
		                           AND T1.VALID = 1
		                         START WITH T1.DEPTID IN
		                                    (SELECT DISTINCT R.DEPTID
		                                       FROM BG_SYS_USER_DEPT_RELATION R
		                                       INNER JOIN BG_SYS_USER U1
		                                         ON U1.USERID = R.USERID 
		                                        <if test="empCode!=null and empCode.length>0">
		                                        AND U1.HRCODE LIKE '%'||#{empCode,jdbcType=VARCHAR}||'%'
		                                        </if>
		                                        <if test="empName!=null and empName.length>0">
		                                        AND U1.USERALIAS LIKE '%'||#{empName,jdbcType=VARCHAR}||'%'
		                                        </if>
		                                        AND U1.STATE = 0
		                                        AND U1.HRCODE IS NOT NULL
		                                        AND U1.VALID = 1
		                                       INNER JOIN BG_SYS_DEPT BD
												  ON BD.DEPTID = R.DEPTID
												 AND BD.VALID = 1		                                       
		                                      WHERE 1=1
		                                        AND SYSDATE BETWEEN R.EXP_START_TIME AND R.EXP_END_TIME
		                                        AND ((R.SRC = 0 AND NOT EXISTS
		                                             (SELECT R1.USERID
		                                                 FROM BG_SYS_USER_DEPT_RELATION R1
		                                                WHERE R1.USERID = R.USERID
		                                                  AND R1.SRC = 1
		                                                  AND SYSDATE BETWEEN
		                                                      R1.EXP_START_TIME AND
		                                                      R1.EXP_END_TIME
		                                                  AND R1.VALID = 1)) OR
		                                            R.SRC IN (1, 2))
		                                        AND R.VALID = 1)
		                        CONNECT BY PRIOR T1.PDEPTID = T1.DEPTID) A) TB
		         WHERE D.DEPTID = TB.DEPTID
		           AND D.DEPTCODE IS NOT NULL
		           AND D.VALID = 1
		        UNION
		        SELECT U1.USERNAME DEPTID,
				       BD.DEPTID PDEPTID,
		               'P' || U1.HRCODE DEPTCODE,
		               U1.USERALIAS DEPTNAME,
		               BD.PDEPTCODE PDEPTCODE,
		               2 TYPE,
		               'PERSION' DATATYPE,
		               0 CHILD_NUM,
		               U1.SORT_ID
		          FROM BG_SYS_USER_DEPT_RELATION R
		          INNER JOIN BG_SYS_USER U1
		            ON U1.USERID = R.USERID
		           <if test="empCode!=null and empCode.length>0">
		           AND U1.HRCODE LIKE '%'||#{empCode,jdbcType=VARCHAR}||'%'
		           </if>
		           <if test="empName!=null and empName.length>0">
		           AND U1.USERALIAS LIKE '%'||#{empName,jdbcType=VARCHAR}||'%'
		           </if>
		           AND U1.HRCODE IS NOT NULL
		           AND U1.VALID = 1
		           AND U1.STATE = 0
		          INNER JOIN BG_SYS_DEPT BD
		            ON BD.DEPTID = R.DEPTID
		            AND BD.VALID = 1
		         WHERE 1=1
		           AND SYSDATE BETWEEN R.EXP_START_TIME AND R.EXP_END_TIME
		           AND ((R.SRC = 0 AND NOT EXISTS
		                (SELECT R1.USERID
		                    FROM BG_SYS_USER_DEPT_RELATION R1
		                   WHERE R1.USERID = R.USERID
		                     AND R1.SRC = 1
		                     AND SYSDATE BETWEEN R1.EXP_START_TIME AND R1.EXP_END_TIME
		                     AND R1.VALID = 1)) OR R.SRC IN (1, 2) AND R.VALID = 1)) T
		 START WITH T.DEPTID = NVL((SELECT DEPTID FROM BG_SYS_DEPT WHERE DEPTCODE = #{rootId, jdbcType = VARCHAR}),'XXX')
		CONNECT BY PRIOR T.DEPTID = T.PDEPTID
		 ORDER SIBLINGS BY T.SORT_ID NULLS LAST
    </select>
</mapper>