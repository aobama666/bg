<?xml version="1.0" encoding="UTF-8" ?> <!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" > <mapper namespace="com.sgcc.bg.mapper.BgWorkinghourInfoMapper" > 	 	 	 <!-- 个人工时的统计 -->	 <select id="selectForStartAndEnd"  resultType="java.lang.String" > 	 select  	      DECODE(SUBSTR(SUM(WORKING_HOUR), 1, 1), '.','0'||SUM(WORKING_HOUR),SUM(WORKING_HOUR)) AS WORKING_HOUR	 	 from BG_WORKINGHOUR_INFO A	 	 	left join BG_PROJECT_INFO  B				on A.PROJECT_ID=B.ID and B.STATUS='1'	 	 where  1=1  and  A.VALID=1   and  A.STATUS=3 	 <if test="StartData!= null and StartData!= ''">	  and   to_char(A.WORK_TIME_BEGIN,'yyyy-mm-dd') &gt;= #{StartData}	 </if>	 <if test="EndData!= null and EndData!= ''">	  and   to_char(A.WORK_TIME_END,'yyyy-mm-dd') &lt;= #{EndData}	 </if>	  <if test="worker!= null and worker!= ''">	  and   A.WORKER = #{worker} 	 </if>	  <if test="category!= null and category!= ''">	  and   NVL(B.CATEGORY,A.CATEGORY) = #{category} 	 </if>	 </select>	  	 	  <select id="selectForTime"  resultType="java.util.Map" > 	select  T.ID,	        T.UPDATE_TIME,	        to_char(T.WORK_TIME,'yyyy-mm-dd') as  WORK_TIME,	        to_char(T.WORK_TIME_BEGIN,'yyyy-mm-dd') as  WORK_TIME_BEGIN,	        to_char(T.WORK_TIME_END,'yyyy-mm-dd') as  WORK_TIME_END,	        (SELECT name FROM BG_SYS_DATADICTIONARY  WHERE pcode='category100002' and vaild=1 and code=T.CATEGORY) as CATEGORY ,	        T.PROJECT_NAME,	        T. WORKING_HOUR,	        T.JOB_CONTENT,	        ROWNUM  as ROW_ID	         from (	          select 		         A.ID,	             to_char(A.UPDATE_TIME,'yyyy-mm-dd') as UPDATE_TIME,	             NVL(B.CATEGORY, A.CATEGORY) as CATEGORY,	             NVL(B.PROJECT_NAME, A.PROJECT_NAME) as PROJECT_NAME,	             A.WORKING_HOUR ,	             A.JOB_CONTENT ,	             A.WORKER ,	             A.STATUS ,	             A.VALID,	             A.WORK_TIME,	             A.WORK_TIME_BEGIN,	             A.WORK_TIME_END		      from BG_WORKINGHOUR_INFO A		       LEFT JOIN   BG_PROJECT_INFO  B  ON A.PROJECT_ID=B.ID AND B.STATUS='1'	       ) T where 1=1  and  T.VALID=1  and  T.STATUS=3 	 <if test="id!= null and id!= ''">	  and   T.ID = #{id} 	 </if>	  <if test="StartData!= null and StartData!= ''">	  and   to_char(T.WORK_TIME_BEGIN,'yyyy-mm-dd') &gt;= #{StartData}	 </if>	 <if test="EndData!= null and EndData!= ''">	  and   to_char(T.WORK_TIME_END,'yyyy-mm-dd')  &lt;= #{EndData}	 </if>	  <if test="worker!= null and worker!= ''">	  and   T.WORKER = #{worker} 	 </if>	  <if test="category!= null and category!= ''">	  and   T.CATEGORY = #{category} 	 </if>	  ORDER BY T.WORK_TIME	 </select>	 	 	 	 	  <select id="selectForNoCategory"  resultType="java.util.Map" >          select T.ID,	        T.UPDATE_TIME,	        to_char(T.WORK_TIME,'yyyy-mm-dd') as WORK_TIME,	        (SELECT name FROM BG_SYS_DATADICTIONARY  WHERE pcode='category100002' and vaild=1 and code=T.CATEGORY)  as CATEGORY ,	        T.PROJECT_NAME,	        T. WORKING_HOUR,	        T.JOB_CONTENT from (          select 	         A.ID,             to_char(A.UPDATE_TIME,'yyyy-mm-dd') as UPDATE_TIME,             NVL(B.CATEGORY, A.CATEGORY) as CATEGORY,             NVL(B.PROJECT_NAME, A.PROJECT_NAME) as PROJECT_NAME,             A.WORKING_HOUR ,             A.JOB_CONTENT ,             A.WORKER ,             A.STATUS ,             A.VALID,             A.WORK_TIME	      from BG_WORKINGHOUR_INFO A 	       LEFT JOIN   BG_PROJECT_INFO  B  ON A.PROJECT_ID=B.ID AND B.STATUS='1'        ) T where 1=1   and  T.VALID=1  and  T.STATUS=3 	 <if test="id!= null and id!= ''">	  and   T.ID = #{id} 	 </if>	    <if test="StartData!= null and StartData!= ''">	  and     to_char(T.WORK_TIME_BEGIN,'yyyy-mm-dd') &gt;= #{StartData}	 </if>	 <if test="EndData!= null and EndData!= ''">	  and    to_char(T.WORK_TIME_END,'yyyy-mm-dd')  &lt;= #{EndData}	 </if>	  <if test="worker!= null and worker!= ''">	  and   T.WORKER = #{worker} 	 </if>	  <if test="category!= null and category!= ''">	  and   T.CATEGORY != #{category} 	 </if>	  ORDER BY T.WORK_TIME	 </select>	 	  <select id="selectForSchedule"  resultType="java.util.Map" >          select  		 ID,SCHEDULE_DATE,SCHEDULE_WEEK,		 SCHEDULE_TYPE,IS_HOLIDAY,VALID,		 CREATE_TIME,CREATE_USER,UPDATE_TIME,UPDATE_USER	 	 from BG_SYS_WORK_SCHEDULE where  VALID=1  and  SCHEDULE_TYPE=0	 <if test="StartData!= null and StartData!= ''">	  and   to_char(SCHEDULE_DATE,'yyyy-mm-dd') &gt;= #{StartData} 	 </if>	 <if test="EndData!= null and EndData!= ''">	  and   to_char(SCHEDULE_DATE,'yyyy-mm-dd') &lt;= #{EndData} 	 </if>	 </select>	 <!-- 个人工时的管理 -->	  <select id="selectForbgWorkinghourInfo"  resultType="java.util.Map" >       SELECT                 T.ID,              T.WORK_TIME,			  T.WORK_TIME_BEGIN,			  T.WORK_TIME_END,	          (SELECT name FROM BG_SYS_DATADICTIONARY  WHERE pcode='category100002' and vaild=1 and code=T.CATEGORY)  as CATEGORY ,	          T.PROJECT_NAME,              T.JOB_CONTENT,	          T.WORKING_HOUR,              T.APPROVER ,              T.STATUS ,              T.WORKER ,              T.PROCESS_NOTE,              T.HRCODE  as EMPLOYEENUMBER,              T.USERALIAS,              T.WORKERS,              T.CREATE_TIME	 from (          select 	         A.ID,             to_char(A.WORK_TIME,'yyyy-mm-dd') as WORK_TIME,			 to_char(A.WORK_TIME_BEGIN,'yyyy-mm-dd') as WORK_TIME_BEGIN,		     to_char(A.WORK_TIME_END,'yyyy-mm-dd') as WORK_TIME_END,             NVL(B.CATEGORY, A.CATEGORY) as CATEGORY,             NVL(B.PROJECT_NAME, A.PROJECT_NAME) as PROJECT_NAME,             A.JOB_CONTENT ,             A.WORKING_HOUR ,    		 A.APPROVER as APPROVER,             F.USERALIAS as USERALIAS,             A.STATUS ,             A.WORKER ,             A.CREATE_TIME,             A.VALID,             C.PROCESS_NOTE,             D.HRCODE,             D.USERALIAS  as WORKERS	      from  BG_WORKINGHOUR_INFO  A 	       LEFT JOIN   BG_PROJECT_INFO  B  ON A.PROJECT_ID=B.ID   	       LEFT JOIN   BG_PROCESS_RECORD C ON A.PROCESS_ID=C.ID	       LEFT JOIN   BG_SYS_USER  D  ON  A.WORKER=D.USERNAME	       LEFT JOIN   BG_SYS_USER  F  ON  A.APPROVER=F.USERNAME       ) T where 1=1   and  T.VALID=1	 <if test="id!= null and id!= ''">	  and   T.ID = #{id} 	 </if>	  <if test="StartData!= null and StartData!= '' and EndData != null and EndData != ''">	  and   (T.WORK_TIME_BEGIN &gt;= #{StartData} AND		     T.WORK_TIME_END &lt;= #{EndData})	 </if>	  <if test="worker!= null and worker!= ''">	  and   T.WORKER = #{worker} 	 </if>	 <if test="category!= null and category!= '' and  category!= 'CG_NP'">	  and   T.CATEGORY = #{category} 	 </if>	 <if test="category == 'CG_NP'">	  and   T.CATEGORY in ('CG','NP')	 </if>	  <if test="projectName!= null and projectName!= ''">	  and  T.PROJECT_NAME like '%' || #{projectName} || '%' 	  </if>	 <if test="status!= null and status!= ''">	  and  T.STATUS = #{status}  	 </if>	 ORDER BY T.WORK_TIME_BEGIN, T.CREATE_TIME DESC	 </select>	<!--<if test="StartData!= null and StartData!= ''">		and    T.WORK_TIME &gt;= #{StartData}	</if>	<if test="EndData!= null and EndData!= ''">		and   T.WORK_TIME  &lt;= #{EndData}	</if>-->	 <select id="selectForbgWorkinghourInfos"  resultType="java.util.Map" >       SELECT                 T.ID,              T.WORK_TIME,              T.WORK_TIME_BEGIN,              T.WORK_TIME_END,              T.UPDATE_TIME,	          (SELECT name FROM BG_SYS_DATADICTIONARY  WHERE pcode='category100002' and vaild=1 and code=T.CATEGORY)  as CATEGORY ,	          T.PROJECT_NAME,              T.JOB_CONTENT,	          T.WORKING_HOUR,              T.APPROVER ,              (SELECT name FROM BG_SYS_DATADICTIONARY  WHERE pcode='cstatus100003' and vaild=1 and code=T.STATUS) as STATUS ,              T.WORKER ,              T.PROCESS_NOTE,              T.USERALIAS,              ROWNUM  as ROW_ID	 from (          select 	         A.ID,             to_char(A.WORK_TIME,'yyyy-mm-dd') as WORK_TIME,             to_char(A.WORK_TIME_BEGIN,'yyyy-mm-dd') as WORK_TIME_BEGIN,             to_char(A.WORK_TIME_END,'yyyy-mm-dd') as WORK_TIME_END,             to_char(A.UPDATE_TIME,'yyyy-mm-dd') as UPDATE_TIME,             NVL(B.CATEGORY, A.CATEGORY) as CATEGORY,             NVL(B.PROJECT_NAME, A.PROJECT_NAME) as PROJECT_NAME,             A.JOB_CONTENT ,             A.APPROVER as APPROVER,             F.USERALIAS as USERALIAS,             A.WORKING_HOUR ,             A.STATUS ,             A.WORKER ,             A.VALID,             C.PROCESS_NOTE	      from  BG_WORKINGHOUR_INFO  A 	       LEFT JOIN   BG_PROJECT_INFO  B  ON A.PROJECT_ID=B.ID   	       LEFT JOIN   BG_PROCESS_RECORD C ON A.PROCESS_ID=C.ID	       LEFT JOIN   BG_SYS_USER  F  ON  A.APPROVER=F.USERNAME       ) T where 1=1   and  T.VALID=1  	 <if test="null != ids and ids.size > 0">	    and   T.ID  in	    <foreach  collection="ids" item="id" open="("  separator="," close=")">	        #{id} 	   </foreach>	 </if>	  <if test="StartData!= null and StartData!= ''">	  and    T.WORK_TIME_BEGIN &gt;= #{StartData}	 </if>	 <if test="EndData!= null and EndData!= ''">	  and   T.WORK_TIME_END  &lt;= #{EndData}	 </if>	  <if test="worker!= null and worker!= ''">	  and   T.WORKER = #{worker} 	 </if>	  <if test="category!= null and category!= ''">	  and   T.CATEGORY = #{category} 	 </if>	  <if test="projectName!= null and projectName!= ''">	  and  T.PROJECT_NAME like '%' || #{projectName} || '%' 	  </if>	 <if test="status!= null and status!= ''">	  and  T.STATUS = #{status}  	 </if>	  ORDER BY T.UPDATE_TIME DESC	 </select>	 	 	  <update id="updatabgWorkinghourInfo"> 		 update BG_WORKINGHOUR_INFO set			JOB_CONTENT= #{jobContent},			WORKING_HOUR= #{workingHour},			PROJECT_NAME= #{projectName}		 where 			ID= #{id}	 </update>	 	   <update id="commitbgWorkinghourInfo"> 	 update BG_WORKINGHOUR_INFO set		JOB_CONTENT= #{jobContent},		WORKING_HOUR= #{workingHour},		PROJECT_NAME= #{projectName},		STATUS= #{status},		PROCESS_ID=#{processId}	 where 		ID= #{id}	 </update>	 	  <update id="deletebgWorkinghourInfo"> 	 update BG_WORKINGHOUR_INFO set		VALID= #{valid} 	 where 		ID= #{id}	 </update>	<update id="backbgWorkinghourInfo"> 	 update BG_WORKINGHOUR_INFO set		STATUS= #{status},PROCESS_ID=#{processId}	 where 		ID= #{id}	 </update>	  	 <select id="selectForKilebgWorkinghourInfo" resultType="java.util.Map">	 select 		ID,		STATUS	 from   BG_WORKINGHOUR_INFO  	    where VALID=1 	 <if test="id!= null and id!= ''">	    and  ID  = #{id} 	 </if>	 	 </select> 	  <!-- 项目工时统计 -->	  <select id="selectForProjectName"  resultType="java.util.Map" >	  	SELECT A.ID,		       TO_CHAR(A.WORK_TIME, 'yyyy-mm-dd') AS WORK_TIME,		       TO_CHAR(A.WORK_TIME_BEGIN, 'yyyy-mm-dd') AS WORK_TIME_BEGIN,		       TO_CHAR(A.WORK_TIME_END, 'yyyy-mm-dd') AS WORK_TIME_END,		       NVL(B.CATEGORY, A.CATEGORY) AS CATEGORY,		       NVL(B.PROJECT_NAME, A.PROJECT_NAME) AS PROJECT_NAME,		       B.PROJECT_NUMBER,		       B.WBS_NUMBER,		       A.PROJECT_ID,		       A.JOB_CONTENT,		       A.WORKING_HOUR,		       A.APPROVER,		       A.WORKER,		       C.PROCESS_NOTE,		       U1.HRCODE,		       U1.USERALIAS,		       DECODE(E.ROLE,'0','项目参与人'，'1','项目负责人') AS ROLE,		       ROWNUM  as ROW_ID		  FROM BG_WORKINGHOUR_INFO A		  LEFT JOIN BG_PROJECT_INFO B		    ON A.PROJECT_ID = B.ID		   AND B.STATUS = '1'		  LEFT JOIN BG_PROCESS_RECORD C		    ON A.PROCESS_ID = C.ID		   AND C.VALID = 1		  LEFT JOIN BG_SYS_USER U1		    ON A.WORKER = U1.USERNAME		   LEFT JOIN BG_PROJECT_USER E		    ON E.PROJECT_ID = B.ID		   AND E.HRCODE = U1.HRCODE		   AND E.STATUS = '1'		 WHERE A.VALID = 1		   AND NVL(B.CATEGORY, A.CATEGORY) NOT IN ('NP', 'CG', 'BP')		   AND A.STATUS = 3		   <if test="approver!= null and approver!= ''">             AND (SELECT U2.USERNAME		           FROM BG_PROJECT_USER E		           JOIN BG_SYS_USER U2		             ON E.HRCODE = U2.HRCODE		          WHERE E.PROJECT_ID = A.PROJECT_ID		            AND E.ROLE = '1'		            AND E.STATUS = '1') = #{approver}	       </if>		   <if test="StartData!= null and StartData!= ''">	          and  to_char(A.WORK_TIME_BEGIN,'yyyy-mm-dd') &gt;= #{StartData}	       </if>	       <if test="EndData!= null and EndData!= ''">	          and  to_char(A.WORK_TIME_END,'yyyy-mm-dd') &lt;= #{EndData}	       </if>	       <if test="projectName!= null and projectName!= ''">	          and  NVL(B.PROJECT_NAME, A.PROJECT_NAME) like '%' || #{projectName} || '%' 	       </if>	       <if test="worker!= null and worker!= ''">	          and  U1.USERALIAS like '%' || #{worker} || '%' 	       </if>	       <if test="projectNumber != null and projectNumber != ''">	          and  B.PROJECT_NUMBER = #{projectNumber} 	       </if>	       <if test="hrCode != null and hrCode != ''">	          and  U1.HRCODE = #{hrCode} 	       </if>	  </select>	  <!-- <select id="selectForProjectName"  resultType="java.util.Map" >  		SELECT  *  from (		  SELECT   PROJECT_NAME, PROJECT_ID , PROJECT_NUMBER , WBS_NUMBER  , SUM(WORKING_HOUR)  as  WORKING_HOUR   from(			   select 			         A.ID,		             to_char(A.WORK_TIME,'yyyy-mm-dd') as WORK_TIME,		             NVL(B.CATEGORY, A.CATEGORY) as CATEGORY,		             NVL(B.PROJECT_NAME, A.PROJECT_NAME) as PROJECT_NAME,		             B.PROJECT_NUMBER,		             B.WBS_NUMBER,		             A.PROJECT_ID,		             A.JOB_CONTENT ,		             A.WORKING_HOUR ,		             A.APPROVER as APPROVER,		             A.STATUS ,		             A.WORKER ,		             A.VALID,		             C.PROCESS_NOTE,		             D.HRCODE,		             A.UPDATE_TIME ,		             D.USERALIAS			      from  BG_WORKINGHOUR_INFO  A 			       LEFT JOIN   BG_PROJECT_INFO  B  ON A.PROJECT_ID=B.ID AND B.STATUS = '1'  			       LEFT JOIN   BG_PROCESS_RECORD C ON A.PROCESS_ID=C.ID AND C.VALID = 1		           LEFT JOIN   BG_SYS_USER  D  ON  A.WORKER=D.USERNAME		         where 		           A.VALID=1  		           AND  NVL(B.CATEGORY, A.CATEGORY) NOT IN ('NP','CG','BP')		           AND  A.STATUS=3		           <if test="StartData!= null and StartData!= ''">			           and   to_char(A.WORK_TIME,'yyyy-mm-dd') &gt;= #{StartData} 			       </if>			       <if test="EndData!= null and EndData!= ''">			           and   to_char(A.WORK_TIME,'yyyy-mm-dd') &lt;= #{EndData} 			       </if>			       <if test="projectName!= null and projectName!= ''">			          and  NVL(B.PROJECT_NAME, A.PROJECT_NAME) like '%' || #{projectName} || '%' 			       </if>		           <if test="worker!= null and worker!= ''">			          and   D.USERALIAS like '%' || #{worker} || '%' 			       </if>		    ) T   where 1=1    		 	  GROUP BY  T.PROJECT_NUMBER,T.PROJECT_NAME ,T.PROJECT_ID , T.WBS_NUMBER   		 	)  	  </select>  -->	  	  	  <select id="selectForProjectNameXQ"  resultType="java.util.Map" >  	     SELECT   PROJECT_NAME, PROJECT_ID , WBS_NUMBER  , SUM(WORKING_HOUR)  as  WORKING_HOUR ,HRCODE,USERALIAS  from(	   select 	         A.ID,             to_char(A.WORK_TIME,'yyyy-mm-dd') as WORK_TIME,             (SELECT name FROM BG_SYS_DATADICTIONARY  WHERE pcode='category100002' and vaild=1 and code=NVL(B.CATEGORY, A.CATEGORY))  as CATEGORY ,             NVL(B.PROJECT_NAME, A.PROJECT_NAME) as PROJECT_NAME,             B.WBS_NUMBER,             A.PROJECT_ID,             A.JOB_CONTENT ,             A.WORKING_HOUR ,             A.APPROVER as APPROVER,             A.STATUS ,             A.WORKER ,             A.VALID,             C.PROCESS_NOTE,             D.HRCODE,             A.UPDATE_TIME ,             D.USERALIAS	      from  BG_WORKINGHOUR_INFO  A 	       LEFT JOIN   BG_PROJECT_INFO  B  ON A.PROJECT_ID=B.ID   	       LEFT JOIN   BG_PROCESS_RECORD C ON A.PROCESS_ID=C.ID           LEFT JOIN   BG_SYS_USER  D  ON  A.WORKER=D.USERNAME         where            A.VALID=1  AND  A.CATEGORY!='NP'  and   A.STATUS=3 	          <if test="StartData!= null and StartData!= ''">	           and   to_char(A.WORK_TIME_BEGIN,'yyyy-mm-dd') &gt;= #{StartData}	          </if>	          <if test="EndData!= null and EndData!= ''">	           and   to_char(A.WORK_TIME_END,'yyyy-mm-dd') &lt;= #{EndData}	          </if>	          <if test="projectName!= null and projectName!= ''">	            	            and  NVL(B.PROJECT_NAME, A.PROJECT_NAME) like '%' || #{projectName} || '%' 	          </if>              <if test="Wbsnumber!= null and Wbsnumber!= ''">               and  B.WBS_NUMBER  like '%' || #{Wbsnumber} || '%' 	          </if>  	          <if test="worker!= null and worker!= ''">	          and   D.USERALIAS like '%' || #{worker} || '%' 	          </if>	              ) T   where 1=1     	  GROUP BY  T.PROJECT_NAME ,T.PROJECT_ID , WBS_NUMBER  ,HRCODE,USERALIAS 	  </select> 	  	  	  	  	  	  	  	  	  	  	  	  	  <select id="selectForProjectNameAndWorker"  resultType="java.util.Map" > 	  SELECT   PROJECT_NAME, PROJECT_ID, PROJECT_NUMBER , WBS_NUMBER  , SUM(WORKING_HOUR)  as  WORKING_HOUR ,HRCODE,USERALIAS   from(	   select 	         A.ID,             to_char(A.WORK_TIME,'yyyy-mm-dd') as WORK_TIME,             NVL(B.CATEGORY, A.CATEGORY) as CATEGORY,             NVL(B.PROJECT_NAME, A.PROJECT_NAME) as PROJECT_NAME,             B.PROJECT_NUMBER,             B.WBS_NUMBER,             A.PROJECT_ID,             A.JOB_CONTENT ,             A.WORKING_HOUR ,             A.APPROVER as APPROVER,             A.STATUS ,             A.WORKER ,             A.VALID,             C.PROCESS_NOTE,             D.HRCODE,             A.UPDATE_TIME ,                         D.USERALIAS	      from  BG_WORKINGHOUR_INFO  A 	       LEFT JOIN   BG_PROJECT_INFO  B  ON A.PROJECT_ID=B.ID   	       LEFT JOIN   BG_PROCESS_RECORD C ON A.PROCESS_ID=C.ID           LEFT JOIN   BG_SYS_USER  D  ON  A.WORKER=D.USERNAME         where            A.VALID=1  AND  A.CATEGORY!='NP'  and   A.STATUS=3           <if test="StartData!= null and StartData!= ''">	           and   to_char(A.WORK_TIME_BEGIN,'yyyy-mm-dd') &gt;= #{StartData}	       </if>	       <if test="EndData!= null and EndData!= ''">	           and   to_char(A.WORK_TIME_END,'yyyy-mm-dd') &lt;= #{EndData}	       </if>	       <if test="projectName!= null and projectName!= ''">	          and   NVL(B.PROJECT_NAME, A.PROJECT_NAME) like '%' || #{projectName} || '%' 	       </if>	        <if test="projectNumber != null and projectNumber != ''">	          and   B.PROJECT_NUMBER= #{projectNumber}	       </if>             <if test="worker!= null and worker!= ''">	          and   D.USERALIAS like '%' || #{worker} || '%' 	       </if>      ) T   where 1=1     	  GROUP BY  T.PROJECT_NAME , T.PROJECT_ID , T.PROJECT_NUMBER  ,T.WBS_NUMBER ,T.HRCODE, T.USERALIAS	 </select>	 	 	  <select id="selectForWorker"  resultType="java.util.Map" >      SELECT * from (     select 	         A.ID,             to_char(A.WORK_TIME,'yyyy-mm-dd') as WORK_TIME,             DECODE( NVL (B. CATEGORY, A . CATEGORY) , 'NP', '1','0')  AS CATEGORY,             NVL(B.PROJECT_NAME, A.PROJECT_NAME) as PROJECT_NAME,             A.PROJECT_ID,             B.PROJECT_NUMBER,             B.WBS_NUMBER,             A.JOB_CONTENT ,             A.WORKING_HOUR ,             A.APPROVER as APPROVER,             A.STATUS ,             A.WORKER ,             A.VALID,             C.PROCESS_NOTE,             D.HRCODE,             A.UPDATE_TIME ,             D.USERALIAS	      from  BG_WORKINGHOUR_INFO  A 	       LEFT JOIN   BG_PROJECT_INFO  B  ON A.PROJECT_ID=B.ID   	       LEFT JOIN   BG_PROCESS_RECORD C ON A.PROCESS_ID=C.ID           LEFT JOIN   BG_SYS_USER  D  ON  A.WORKER=D.USERNAME         where            A.VALID=1  AND  A.STATUS=3	                  <if test="StartData!= null and StartData!= ''">	           and   to_char(A.WORK_TIME_BEGIN,'yyyy-mm-dd') &gt;= #{StartData}	       </if>	       <if test="EndData!= null and EndData!= ''">	           and   to_char(A.WORK_TIME_END,'yyyy-mm-dd') &lt;= #{EndData}	       </if>      )  T where  1=1   and T.CATEGORY=0            <if test="projectName!= null and projectName!= ''">	          and  T.PROJECT_NAME = #{projectName} 	        </if>            <if test="worker!= null and worker!= ''">	          and   T.USERALIAS  = #{worker}  	        </if>	        <if test="projectNumber!= null and projectNumber!= ''">	          and   T.PROJECT_NUMBER  = #{projectNumber}  	       </if>	        <if test="hrcode!= null and hrcode!= ''">	          and   T.HRCODE  = #{hrcode}  	       </if>	       ORDER BY T.WORK_TIME	 </select>	 	 <!-- 组织工时统计 -->	 	  <select id="selectForDept"  resultType="java.lang.String" >  	 select  	     DECODE(SUBSTR(SUM(WORKING_HOUR), 1, 1), '.','0'||SUM(WORKING_HOUR),SUM(WORKING_HOUR)) AS WORKING_HOUR	     	 	 from BG_WORKINGHOUR_INFO A	 	 	left join BG_PROJECT_INFO  B				on A.PROJECT_ID=B.ID and B.STATUS='1'	 	 where  1=1  and  A.VALID=1   and  A.STATUS=3 	 <if test="StartData!= null and StartData!= ''">	  and   to_char(A.WORK_TIME_BEGIN,'yyyy-mm-dd') &gt;= #{StartData}	 </if>	 <if test="EndData!= null and EndData!= ''">	  and   to_char(A.WORK_TIME_END,'yyyy-mm-dd') &lt;= #{EndData}	 </if>	  <if test="deptid!= null and deptid!= ''">	  and   A.DEPT_ID = #{deptid} 	 </if>	  <if test="ladid!= null and ladid!= ''">	  and   A.LAB_ID = #{ladid} 	 </if>	 <if  test="worker!= null and worker!= ''">	  and   A.WORKER = #{worker} 	 </if>	  <if  test="category!= null and category!= ''">	  and   NVL(B.CATEGORY ,A.CATEGORY)= #{category} 	  </if>	   <if  test="Nocategory!= null and Nocategory!= ''">	  and   NVL(B.CATEGORY ,A.CATEGORY) != #{Nocategory} 	  </if>	  	 </select>	 	 	   <select id="selectForDepts"  resultType="java.lang.String" > 	 select  	   		  DECODE(SUBSTR(SUM(WORKING_HOUR), 1, 1), '.','0'||SUM(WORKING_HOUR),SUM(WORKING_HOUR)) AS WORKING_HOUR	 	 from BG_WORKINGHOUR_INFO A	 	 	left join BG_PROJECT_INFO  B				on A.PROJECT_ID=B.ID and B.STATUS='1'	 	 where  1=1  and  A.VALID=1   and  A.STATUS=3 	 <if test="StartData!= null and StartData!= ''">	  and   to_char(A.WORK_TIME_BEGIN,'yyyy-mm-dd') &gt;= #{StartData}	 </if>	 <if test="EndData!= null and EndData!= ''">	  and   to_char(A.WORK_TIME_END,'yyyy-mm-dd') &lt;= #{EndData}	 </if>	  <if test="deptid!= null and deptid!= ''">	  and   A.DEPT_ID = #{deptid} 	 </if>	 	 <if test="ladid != null and ladid.size > 0">	    and    A.LAB_ID  in	    <foreach  collection="ladid" item="ladids" open="("  separator="," close=")">	        #{ladids} 	   </foreach>	  </if>	 <if  test="worker!= null and worker!= ''">	  and   A.WORKER = #{worker} 	 </if>	  <if  test="category!= null and category!= ''">	  and   NVL(B.CATEGORY ,A.CATEGORY)= #{category} 	  </if>	   <if  test="Nocategory!= null and Nocategory!= ''">	  and   NVL(B.CATEGORY ,A.CATEGORY) != #{Nocategory} 	  </if>	  	 </select>	 	   <select id="selectForNumber"  resultType="java.util.Map" > 	   select ID, WORK_TIME, HRCODE,USERALIAS,	   (SELECT name FROM BG_SYS_DATADICTIONARY  WHERE pcode='category100002' and vaild=1 and code=CATEGORY)  as CATEGORY ,	   PROJECT_NUMBER,WBS_NUMBER,PROJECT_NAME,JOB_CONTENT,WORKING_HOUR  from (	    select 	         A.ID,             to_char(A.WORK_TIME,'yyyy-mm-dd') as WORK_TIME,             NVL(B.CATEGORY, A.CATEGORY) as CATEGORY,             NVL(B.PROJECT_NAME, A.PROJECT_NAME) as PROJECT_NAME,             B.PROJECT_NUMBER,             B.WBS_NUMBER,             A.JOB_CONTENT ,             A.APPROVER as APPROVER,             A.WORKING_HOUR ,             A.STATUS ,             A.WORKER ,             A.VALID,             A.DEPT_ID,             A.LAB_ID,             C.PROCESS_NOTE,             D.HRCODE,             A.UPDATE_TIME ,             D.USERALIAS	      from  BG_WORKINGHOUR_INFO  A 	       LEFT JOIN   BG_PROJECT_INFO  B  ON A.PROJECT_ID=B.ID   	       LEFT JOIN   BG_PROCESS_RECORD C ON A.PROCESS_ID=C.ID           LEFT JOIN   BG_SYS_USER  D  ON  A.WORKER=D.USERNAME         where            A.VALID=1  AND    A.STATUS=3	   )  where  1=1	  	 <if test="StartData!= null and StartData!= ''">	  and   WORK_TIME  &gt;= #{StartData}	 </if>	 <if test="EndData!= null and EndData!= ''">	  and    WORK_TIME  &lt;= #{EndData}	 </if>	  <if test="deptid!= null and deptid!= ''">	  and   DEPT_ID = #{deptid} 	 </if>	  <if test="ladid!= null and ladid!= ''">	  and   LAB_ID = #{ladid} 	 </if>	 <if  test="worker!= null and worker!= ''">	  and   WORKER = #{worker} 		 </if>	  <if  test="category!= null and category!= ''">	  and   CATEGORY = #{category} 	  </if>	   <if  test="Nocategory!= null and Nocategory!= ''">	  and   CATEGORY != #{Nocategory} 	  </if>	   <if  test="showdata!= null and showdata!= ''">	    and   WORKING_HOUR > #{showdata} 	  </if>	  	  </select>	  	  	 <select id="selectForUser"  resultType="java.util.Map" > 		SELECT *		  FROM (SELECT U.USERID,		               U.USERNAME,		               U.HRCODE,		               U.USERALIAS,		               D.PDEPTID,		               D2.DEPTNAME PDEPTNAME,		               D.DEPTID,		               D.DEPTNAME,		               D.PDEPTCODE,		               D.DEPTCODE,		               U.STATE,		               U.MOBILE,		               U.EMAIL,		               D.TYPE		          FROM BG_SYS_USER_DEPT_RELATION R		         INNER JOIN BG_SYS_USER U		            ON U.USERID = R.USERID		           AND U.STATE = 0		         INNER JOIN BG_SYS_DEPT D		            ON D.DEPTID = R.DEPTID		           AND D.VALID = 1		         INNER JOIN BG_SYS_DEPT D2		            ON D.PDEPTID = D2.DEPTID		           AND D2.VALID = 1		         WHERE 1 = 1		              		           AND SYSDATE BETWEEN R.EXP_START_TIME AND R.EXP_END_TIME		           AND ((R.SRC = 0 AND NOT EXISTS		                (SELECT R1.USERID		                    FROM BG_SYS_USER_DEPT_RELATION R1		                   WHERE R1.USERID = R.USERID		                     AND SYSDATE BETWEEN R1.EXP_START_TIME AND R1.EXP_END_TIME		                     AND R1.VALID = 1		                     AND R1.SRC = 1)) OR R.SRC IN (1, 2))		           AND R.VALID = 1		        		        )		 WHERE 1 = 1	      <if  test="pdeptid!= null and pdeptid!= ''">		   and  PDEPTID = #{pdeptid} 		  </if>	      <if  test="deptid!= null and deptid!= ''">		   and  DEPTID = #{deptid} 		  </if>		  <if test="deptidList!= null and deptidList.size>0">		   and  DEPTID IN 			  <foreach  collection="deptidList" item="deptId" open="("  separator="," close=")">		        	#{deptId} 		  	   </foreach> 		  </if>		  <if  test="useralias!= null and useralias!= ''">		   and  USERALIAS like '%' || #{useralias} || '%' 		  </if>		  <if  test="username!= null and username!= ''">		   and  USERNAME = #{username} 		  </if>	 </select>	 	 	 	 	 	  	 <select id="selectForUsers"  resultType="java.util.Map" > select   *  from ( SELECT U.USERID,       U.USERNAME,       U.HRCODE,       U.USERALIAS,       D.PDEPTID,       D2.DEPTNAME PDEPTNAME,       D.DEPTID,       D.DEPTNAME,       D.PDEPTCODE,       D.DEPTCODE,       U.STATE,       U.MOBILE,       U.EMAIL,       D.TYPE  FROM BG_SYS_USER_DEPT_RELATION R INNER JOIN BG_SYS_USER U    ON U.USERID = R.USERID INNER JOIN BG_SYS_DEPT D    ON D.DEPTID = R.DEPTID INNER JOIN BG_SYS_DEPT D2    ON D.PDEPTID = D2.DEPTID WHERE 1 = 1     AND SYSDATE BETWEEN R.EXP_START_TIME AND R.EXP_END_TIME   AND ((R.SRC = 0 AND NOT EXISTS        (SELECT R1.USERID            FROM BG_SYS_USER_DEPT_RELATION R1           WHERE R1.USERID = R.USERID             AND SYSDATE BETWEEN R1.EXP_START_TIME AND R1.EXP_END_TIME             AND R1.VALID = 1             AND R1.SRC = 1)) OR R.SRC IN (1, 2))   AND R.VALID = 1  )  where    1=1      <if  test="pdeptid!= null and pdeptid!= ''">	  and   PDEPTID = #{pdeptid} 	  </if>      <if  test=" deptid!= null and deptid.size > 0 ">	     and    DEPTID  in	    <foreach  collection="deptid" item="deptids" open="("  separator="," close=")">	        #{deptids} 	   </foreach>	  </if>	  <if  test="useralias!= null and useralias!= ''">	   and  USERALIAS like '%' || #{useralias} || '%' 	  </if>	    <if  test="username!= null and username!= ''">	  and  USERNAME = #{username} 	  	  </if>   	 </select>	 	 	   <!--  获取组织树 -->    <select id="getAllOrganTree" resultType="java.util.Map">    SELECT  * from (        	SELECT T.DEPTID,		       T.PDEPTID,		       T.DEPTCODE,		       T.DEPTNAME,		       T.PDEPTCODE,		       T.PDEPTNAME,		       T.TYPE,		       'ORGAN' DATATYPE,		       		       <choose>					<when test="level!=null and level == '0'">					    0					</when>					<when test="level!=null and level == '1'">					    CASE WHEN T.TYPE = 1 THEN 0					         ELSE  (SELECT COUNT(S.DEPTID)							          FROM (SELECT *									          FROM BG_SYS_DEPT D1									         WHERE 1 = 1									           <if test="limit!=null and limit!='' and limit.length>2">											    AND D1.DEPTID IN (${limit})											   </if>											   <if test="level!=null and level!=''">											   	AND #{level, jdbcType = DOUBLE} >= NVL(D1.TYPE, 0)  											   </if>									        ) S							         WHERE S.PDEPTCODE = T.DEPTCODE							           AND S.DEPTCODE IS NOT NULL							           AND S.VALID = 1)							  END					</when>					<otherwise>					   (SELECT COUNT(S.DEPTID)				          FROM (SELECT *						          FROM BG_SYS_DEPT D1						         WHERE 1 = 1						           <if test="limit!=null and limit!=''">								    AND D1.DEPTID IN (${limit})								   </if>								   <if test="level!=null and level!=''">								   	AND #{level} >= D1.TYPE 								   </if>						        ) S				         WHERE S.PDEPTCODE = T.DEPTCODE				           AND S.DEPTCODE IS NOT NULL				           AND S.VALID = 1)					 </otherwise>				</choose>		        CHILD_NUM		  FROM (SELECT *		          FROM BG_SYS_DEPT D1		         WHERE 1 = 1		           <if test="limit!=null and limit!=''">				    AND D1.DEPTID IN (${limit})				   </if>				   <if test="level!=null and level!=''">				   	AND #{level} >= D1.TYPE 				   </if>		        ) T		 WHERE T.DEPTCODE IS NOT NULL		   AND T.VALID = 1		 START WITH T.DEPTID = NVL((SELECT DEPTID FROM BG_SYS_DEPT WHERE DEPTCODE = #{rootId, jdbcType = VARCHAR}),'XXX')		CONNECT BY PRIOR T.DEPTID = T.PDEPTID		 ORDER SIBLINGS BY T.SORT_ID NULLS LAST		 )     where  1=1		 		  <if  test="pdeptid!= null and pdeptid!= ''">	        and   PDEPTID = #{pdeptid} 	      </if>          <if  test="deptid!= null and deptid!= ''">	        and  DEPTID = #{deptid} 	      </if>		 		     </select>	 	 	 <select id="selectFordepts"  resultType="java.util.Map" > select   DISTINCT  PDEPTID , PDEPTNAME ,  DEPTID ,DEPTNAME  from ( SELECT U.USERID,       U.USERNAME,       U.HRCODE,       U.USERALIAS,       D.PDEPTID,       D2.DEPTNAME PDEPTNAME,       D.DEPTID,       D.DEPTNAME,       D.PDEPTCODE,       D.DEPTCODE,       U.STATE,       U.MOBILE,       U.EMAIL,       D.TYPE  FROM BG_SYS_USER_DEPT_RELATION R INNER JOIN BG_SYS_USER U    ON U.USERID = R.USERID INNER JOIN BG_SYS_DEPT D    ON D.DEPTID = R.DEPTID INNER JOIN BG_SYS_DEPT D2    ON D.PDEPTID = D2.DEPTID WHERE 1 = 1     AND SYSDATE BETWEEN R.EXP_START_TIME AND R.EXP_END_TIME   AND ((R.SRC = 0 AND NOT EXISTS        (SELECT R1.USERID            FROM BG_SYS_USER_DEPT_RELATION R1           WHERE R1.USERID = R.USERID             AND SYSDATE BETWEEN R1.EXP_START_TIME AND R1.EXP_END_TIME             AND R1.VALID = 1             AND R1.SRC = 1)) OR R.SRC IN (1, 2))   AND R.VALID = 1  )  where    1=1      <if  test="pdeptid!= null and pdeptid!= ''">	  and   PDEPTID = #{pdeptid} 	   	  </if>      <if  test="deptid!= null and deptid!= ''">	  and  DEPTID = #{deptid} 	  </if>   	 </select>	 	 	  <select id="selectForRole"  resultType="java.util.Map" > 	 select  		  	DECODE (						 ROLE,						0,						'项目参与人',						1,						'项目负责人',						2,						'项目执行人'					) AS ROLE	 	 from BG_PROJECT_USER where  1=1     and  STATUS=1	 	  <if test="projectId!= null and projectId!= ''">	  and   PROJECT_ID = #{projectId} 	 </if>	  <if test="hrcode!= null and hrcode!= ''">	  and   HRCODE = #{hrcode} 	 </if>	    ORDER BY  UPDATE_DATE  desc	 </select>	 	 	  <select id="selectForUserName"  resultType="java.util.Map" > 	   select   DISTINCT		 A.HRCODE,A.PROJECT_ID,B.USERALIAS ,B.USERNAME	 	 from BG_PROJECT_USER  A          INNER JOIN BG_SYS_USER B		    ON A.HRCODE = B.HRCODE		    AND B.VALID = 1  where  1=1          and  A.STATUS=1          and  A.ROLE=1           <if test="userName!= null and userName!= ''">	     and  B.USERNAME =#{userName} 	      </if>        	 </select>	 	 <select id="selectCheckHous"  resultType="java.util.Map" >      SELECT  WORK_TIME,  SUM(WORKING_HOUR)as WORKING_HOUR from (          SELECT                 T.ID,              T.WORK_TIME,	          T.CATEGORY,	          T.PROJECT_NAME,              T.JOB_CONTENT,	          T.WORKING_HOUR,              T.APPROVER ,              T.STATUS ,              T.WORKER ,              T.PROCESS_NOTE,              T.HRCODE  as EMPLOYEENUMBER,              T.USERALIAS,              T.WORKERS	 from (          select 	         A.ID,             to_char(A.WORK_TIME,'yyyy-mm-dd') as WORK_TIME,             NVL(B.CATEGORY, A.CATEGORY) as CATEGORY,             NVL(B.PROJECT_NAME, A.PROJECT_NAME) as PROJECT_NAME,             A.JOB_CONTENT ,             A.WORKING_HOUR ,             A.APPROVER as APPROVER,             F.USERALIAS as USERALIAS,             A.STATUS ,             A.WORKER ,             A.VALID,             C.PROCESS_NOTE,             D.HRCODE,             D.USERALIAS  as WORKERS	      from  BG_WORKINGHOUR_INFO  A 	       LEFT JOIN   BG_PROJECT_INFO  B  ON A.PROJECT_ID=B.ID   	       LEFT JOIN   BG_PROCESS_RECORD C ON A.PROCESS_ID=C.ID	       LEFT JOIN   BG_SYS_USER  D  ON  A.WORKER=D.USERNAME	       LEFT JOIN   BG_SYS_USER  F  ON  A.APPROVER=F.USERNAME       ) T where 1=1   and  T.VALID=1           <if test="null != ids and ids.size > 0">	    and    T.ID  in	    <foreach  collection="ids" item="id" open="("  separator="," close=")">	        #{id} 	   </foreach>	 </if>         ) where 1=1  GROUP BY    WORK_TIME 	 </select>	 	  <select id="selectCheckWorker"  resultType="java.util.Map" >      SELECT  WORK_TIME,  SUM(WORKING_HOUR)as WORKING_HOUR from (          SELECT                 T.ID,              T.WORK_TIME,	          T.CATEGORY,	          T.PROJECT_NAME,              T.JOB_CONTENT,	          T.WORKING_HOUR,              T.APPROVER ,              T.STATUS ,              T.WORKER ,              T.PROCESS_NOTE,              T.HRCODE  as EMPLOYEENUMBER,              T.USERALIAS,              T.WORKERS	 from (          select 	         A.ID,             to_char(A.WORK_TIME,'yyyy-mm-dd') as WORK_TIME,             NVL(B.CATEGORY, A.CATEGORY) as CATEGORY,             NVL(B.PROJECT_NAME, A.PROJECT_NAME) as PROJECT_NAME,             A.JOB_CONTENT ,             A.WORKING_HOUR ,             A.APPROVER as APPROVER,             F.USERALIAS as USERALIAS,             A.STATUS ,             A.WORKER ,             A.VALID,             C.PROCESS_NOTE,             D.HRCODE,             D.USERALIAS  as WORKERS	      from  BG_WORKINGHOUR_INFO  A 	       LEFT JOIN   BG_PROJECT_INFO  B  ON A.PROJECT_ID=B.ID   	       LEFT JOIN   BG_PROCESS_RECORD C ON A.PROCESS_ID=C.ID	       LEFT JOIN   BG_SYS_USER  D  ON  A.WORKER=D.USERNAME	       LEFT JOIN   BG_SYS_USER  F  ON  A.APPROVER=F.USERNAME	         where            A.VALID=1  AND    A.STATUS IN (3)       ) T where 1=1   and  T.VALID=1           	        <if test="userName!= null and userName!= ''">	     and  T .WORKER =#{userName} 	   </if>	    <if test="workTime!= null and workTime!= ''">	     and  T .WORK_TIME =#{workTime} 	   </if>		) where 1=1  GROUP BY    WORK_TIME	 </select>	 	  <select id="selectCheckTime"  resultType="java.util.Map" > 	select T.ID,	        T.UPDATE_TIME,	        to_char(T.WORK_TIME,'yyyy-mm-dd') as  WORK_TIME,	        T.CATEGORY,	        T.PROJECT_NAME,	        T. WORKING_HOUR,	        T.JOB_CONTENT,	        ROWNUM  as ROW_IDS	         from (          select 	         A.ID,             to_char(A.UPDATE_TIME,'yyyy-mm-dd') as UPDATE_TIME,             NVL(B.CATEGORY, A.CATEGORY) as CATEGORY,             NVL(B.PROJECT_NAME, A.PROJECT_NAME) as PROJECT_NAME,             A.WORKING_HOUR ,             A.JOB_CONTENT ,             A.WORKER ,             A.STATUS ,             A.VALID,             A.WORK_TIME	      from BG_WORKINGHOUR_INFO A  LEFT JOIN   BG_PROJECT_INFO  B  ON A.PROJECT_ID=B.ID           ) T where 1=1  and  T.VALID=1   	 <if test="id!= null and id!= ''">	  and   T.ID = #{id} 	 </if>	  <if test="StartData!= null and StartData!= ''">	  and     to_char(T.WORK_TIME_BEGIN,'yyyy-mm-dd') &gt;= #{StartData}	 </if>	 <if test="EndData!= null and EndData!= ''">	  and    to_char(T.WORK_TIME_END,'yyyy-mm-dd')  &lt;= #{EndData}	 </if>	  <if test="worker!= null and worker!= ''">	  and   T.WORKER = #{worker} 	 </if>	  <if test="category!= null and category!= ''">	  and   T.CATEGORY = #{category} 	 </if>	 	<select id="selectCheckTime"  resultType="java.util.Map" >		select T.ID,				T.UPDATE_TIME,				to_char(T.WORK_TIME,'yyyy-mm-dd') as  WORK_TIME,				to_char(T.WORK_TIME_BEGIN,'yyyy-mm-dd') as  WORK_TIME_BEGIN,				to_char(T.WORK_TIME_END,'yyyy-mm-dd') as  WORK_TIME_END,				T.CATEGORY,				T.PROJECT_NAME,				T. WORKING_HOUR,				T.JOB_CONTENT,				ROWNUM  as ROW_IDS				 from (			  select				 A.ID,				 to_char(A.UPDATE_TIME,'yyyy-mm-dd') as UPDATE_TIME,				 NVL(B.CATEGORY, A.CATEGORY) as CATEGORY,				 NVL(B.PROJECT_NAME, A.PROJECT_NAME) as PROJECT_NAME,				 A.WORKING_HOUR ,				 A.JOB_CONTENT ,				 A.WORKER ,				 A.STATUS ,				 A.VALID,				 A.WORK_TIME,				 A.WORK_TIME_BEGIN,				 A.WORK_TIME_END			  from BG_WORKINGHOUR_INFO A  LEFT JOIN   BG_PROJECT_INFO  B  ON A.PROJECT_ID=B.ID		   ) T where 1=1  and  T.VALID=1		 <if test="id!= null and id!= ''">		  and   T.ID = #{id}		 </if>		  <if test="StartData!= null and StartData!= ''">		  and     to_char(T.WORK_TIME_BEGIN,'yyyy-mm-dd') &gt;= #{StartData}		 </if>		 <if test="EndData!= null and EndData!= ''">		  and    to_char(T.WORK_TIME_END,'yyyy-mm-dd')  &lt;= #{EndData}		 </if>		  <if test="worker!= null and worker!= ''">		  and   T.WORKER = #{worker}		 </if>		  <if test="category!= null and category!= ''">		  and   T.CATEGORY = #{category}		 </if>	 </select>	 	  <select id="selectForProjectAndWorkHour"  resultType="java.util.Map" > 	  	SELECT NVL(B.PROJECT_NUMBER,'NP000') PROJECT_NUMBER,	       NVL(B.PROJECT_NAME, '非项目工作') PROJECT_NAME,	       DECODE(SUBSTR(T.WORK_HOUR, 1, 1), '.','0'||T.WORK_HOUR,T.WORK_HOUR) WORK_HOUR		  FROM (SELECT		         NVL(A.PROJECT_ID, '') AS PROJECT_ID,		         NVL(SUM(A.WORKING_HOUR),0) AS WORK_HOUR		          FROM BG_WORKINGHOUR_INFO A		         WHERE 1 = 1		           AND A.VALID = 1		           AND A.STATUS = 3	             <if test="startData!= null and startData!= ''">				  and   to_char(A.WORK_TIME_BEGIN,'yyyy-mm-dd') &gt;= #{startData}				 </if>				 <if test="endData!= null and endData!= ''">				  and   to_char(A.WORK_TIME_END,'yyyy-mm-dd') &lt;= #{endData}				 </if>				  <if test="deptid!= null and deptid!= ''">				  and   A.DEPT_ID = #{deptid} 				 </if>				  <if test="ladid!= null and ladid!= ''">				  and   A.LAB_ID = #{ladid} 				 </if>				 <if  test="worker!= null and worker!= ''">				  and   A.WORKER = #{worker} 				 </if>		         GROUP BY A.PROJECT_ID) T		  LEFT JOIN BG_PROJECT_INFO B		    ON T.PROJECT_ID = B.ID AND B.STATUS = '1'	 </select>	 	 <select id="validateAuthority"  resultType="int" > 	  	SELECT COUNT(1)		  FROM BG_PROJECT_USER PU		  JOIN BG_PROJECT_INFO PJ		    ON PU.PROJECT_ID = PJ.ID		 WHERE PU.STATUS = '1'		   AND PJ.STATUS = '1'		   AND PU.HRCODE = #{hrcode}		   AND PJ.PROJECT_NUMBER = #{proNumber}	 </select>	 	 <!--一次性查询项目共时以及非项目工时  -->	 <select id="selectForWorkingHour"  resultType="java.util.Map" > 	 	SELECT T.ID,		       T.PROJECT_ID,		       T.WORKER,		       U.HRCODE,		       U.USERALIAS,		       D.DEPTCODE,		       D.DEPTNAME,       		   D.PDEPTNAME,		       P.RELATED_PROJECT_ID,		       NVL(P.PROJECT_NUMBER, 'NP000') AS PROJECT_NUMBER,		       NVL(P.PROJECT_NAME, T.PROJECT_NAME) AS PROJECT_NAME,		       NVL(P.CATEGORY, T.CATEGORY) AS CATEGORY,		       T.WORKING_HOUR,		       T.JOB_CONTENT,		       TO_CHAR(T.WORK_TIME, 'yyyy-mm-dd') AS WORK_TIME,		       ROWNUM AS ROW_ID,		       TO_CHAR(T.WORK_TIME_BEGIN, 'yyyy-mm-dd') AS WORK_TIME_BEGIN,		       TO_CHAR(T.WORK_TIME_END, 'yyyy-mm-dd') AS WORK_TIME_END		  FROM BG_WORKINGHOUR_INFO T		  LEFT JOIN BG_PROJECT_INFO P		    ON T.PROJECT_ID = P.ID		   AND P.STATUS = '1'		  LEFT JOIN BG_SYS_USER U		    ON U.USERNAME = T.WORKER		  LEFT JOIN BG_SYS_DEPT D		    ON D.DEPTID = T.LAB_ID		   AND D.VALID = 1		 WHERE T.VALID = '1'		   AND T.STATUS = '3'		   <if test="category != null and category.length > 0">	    	and NVL(P.CATEGORY, T.CATEGORY) IN 	    		<foreach  collection="category" item="type" open="("  separator="," close=")">	       		 	#{type} 	   			</foreach>	  	   </if>		   <if test="startData!= null and startData!= ''">	 		and   to_char(T.WORK_TIME_BEGIN,'yyyy-mm-dd') &gt;= #{startData}	 	   </if>	 	   <if test="endData!= null and endData!= ''">	  		and   to_char(T.WORK_TIME_END,'yyyy-mm-dd') &lt;= #{endData}		   </if>		   <if test="deptid!= null and deptid!= ''">	  	    and   T.DEPT_ID = #{deptid} 	       </if>	       <if test="labidList != null and labidList.size > 0">	    	and    T.LAB_ID  in	    		<foreach  collection="labidList" item="labids" open="("  separator="," close=")">	       		 #{labids} 	   			</foreach>	  	   </if>	  	   <if test="labid != null and labid != ''">	    	 and   T.LAB_ID = #{labid}	  	   </if>	  	   <if  test="worker!= null and worker!= ''">	  		 and   T.WORKER = #{worker} 		   </if>	  	<!-- SELECT (SELECT NVL(SUM(A.WORKING_HOUR),0)          FROM BG_WORKINGHOUR_INFO A         WHERE A.VALID = 1           AND A.STATUS = '3'           AND A.CATEGORY != 'NP'           <if test="startData!= null and startData!= ''">	 		and   to_char(A.WORK_TIME,'yyyy-mm-dd') &gt;= #{startData} 	 	   </if>	 	   <if test="endData!= null and endData!= ''">	  		and   to_char(A.WORK_TIME,'yyyy-mm-dd') &lt;= #{endData} 		   </if>		    <if test="deptid!= null and deptid!= ''">	  	    and   A.DEPT_ID = #{deptid} 	        </if>	        <if test="labidList != null and labidList.size > 0">	    	and    A.LAB_ID  in	    		<foreach  collection="labidList" item="labids" open="("  separator="," close=")">	       		 #{labids} 	   			</foreach>	  		</if>	  		<if test="labid != null and labid != ''">	    	 and    A.LAB_ID = #{labid}	  		</if>	  		<if  test="worker!= null and worker!= ''">	  		 and   A.WORKER = #{worker} 			</if> 	) AS PROHOUR,       (SELECT NVL(SUM(A.WORKING_HOUR),0)          FROM BG_WORKINGHOUR_INFO A         WHERE A.VALID = 1           AND A.STATUS = '3'           AND A.CATEGORY = 'NP'           <if test="startData!= null and startData!= ''">	 		and   to_char(A.WORK_TIME,'yyyy-mm-dd') &gt;= #{startData} 	 	   </if>	 	   <if test="endData!= null and endData!= ''">	  		and   to_char(A.WORK_TIME,'yyyy-mm-dd') &lt;= #{endData} 		   </if>		    <if test="deptid!= null and deptid!= ''">	  	    and   A.DEPT_ID = #{deptid} 	        </if>	        <if test="labidList != null and labidList.size > 0">	    	and    A.LAB_ID  in	    		<foreach  collection="labidList" item="labids" open="("  separator="," close=")">	       		 #{labids} 	   			</foreach>	  		</if>	  		<if test="labid != null and labid != ''">	    	 and    A.LAB_ID = #{labid}	  		</if>	  		<if  test="worker!= null and worker!= ''">	  		 and   A.WORKER = #{worker} 			</if>) AS NPHOUR  		FROM DUAL -->	 </select>	 	 <select id="selectUserFromWorkHourInfo"  resultType="java.util.Map" > 		SELECT DISTINCT U.USERALIAS,		       U.USERNAME,		       U.HRCODE,		       D.PDEPTNAME,		       D.PDEPTID,		       D.DEPTNAME,		       D.DEPTCODE,		       D.DEPTID		  FROM BG_WORKINGHOUR_INFO T		 INNER JOIN BG_SYS_USER U		    ON T.WORKER = U.USERNAME		 INNER JOIN BG_SYS_DEPT D		    ON T.LAB_ID = D.DEPTID		 WHERE T.VALID = 1		   AND T.STATUS = '3'		   <if  test="labId!= null and labId!= ''">		    AND   T.LAB_ID = #{labId} 		   </if>		   <if  test="useralias!= null and useralias!= ''">		    AND  USERALIAS like '%' || #{useralias} || '%' 		   </if>		   <if  test="username!= null and username!= ''">		    AND  USERNAME = #{username} 		   </if>   	 </select>	 	 <select id="getBPByDateAndIsRelated"  resultType="map" > 	 	SELECT T.ID,		       T.PROJECT_ID,		       T.WORKER,		       U.HRCODE,       		   U.USERALIAS,       		   D.DEPTCODE,       		   D.DEPTNAME,       		   D.PDEPTNAME,		      <!--  D.NAME AS CATEGORY, -->		       NVL(P.CATEGORY, T.CATEGORY) AS CATEGORY,		       NVL(P.PROJECT_NUMBER, 'NP000') AS PROJECT_NUMBER,		       NVL(P.PROJECT_NAME, T.PROJECT_NAME) AS PROJECT_NAME,		       T.WORKING_HOUR,		       T.JOB_CONTENT,		       TO_CHAR(T.WORK_TIME, 'yyyy-mm-dd') AS WORK_TIME,		       ROWNUM  as ROW_ID		  FROM BG_WORKINGHOUR_INFO T		  LEFT JOIN BG_PROJECT_INFO P		    ON T.PROJECT_ID = P.ID		   AND P.STATUS = '1'		  LEFT JOIN BG_SYS_DATADICTIONARY D		    ON D.CODE = NVL(P.CATEGORY, T.CATEGORY)		   AND D.PCODE = 'category100002'		   AND D.VAILD = 1		  LEFT JOIN BG_SYS_USER U   			ON T.WORKER = U.USERNAME   		  LEFT JOIN BG_SYS_DEPT D		    ON D.DEPTID = T.LAB_ID		   AND D.VALID = 1		 WHERE T.VALID = '1'		   AND T.STATUS = '3'		   AND NVL(P.CATEGORY, T.CATEGORY) = 'BP'		   AND (			 <if test="proList != null and proList.size>0 and isRelated">			  	P.RELATED_PROJECT_ID IS NOT NULL			 	AND P.RELATED_PROJECT_ID IN 			 	<foreach  collection="proList" item="map" open="("  separator="," close=")">		        	#{map.PROJECT_ID} 		  	    </foreach>			 </if>			 <if test="proList != null and proList.size>0 and !isRelated">			 	P.RELATED_PROJECT_ID IS NULL			 	OR P.RELATED_PROJECT_ID NOT IN 			 	<foreach  collection="proList" item="map" open="("  separator="," close=")">		        	#{map.PROJECT_ID} 		  	    </foreach>			 </if>			 <!--防止IN 条件的三值造成混乱  -->			 <if test="proList == null or proList.size == 0 and isRelated">			 	1 != 1			 </if>			 <if test="proList == null or proList.size == 0 and !isRelated">			 	1 = 1			 </if>		 )	 	 <if test="startDate!= null and startDate!= ''">		  and   to_char(T.WORK_TIME_BEGIN,'yyyy-mm-dd') &gt;= #{startDate}		 </if>		 <if test="endDate!= null and endDate!= ''">		  and   to_char(T.WORK_TIME_END,'yyyy-mm-dd') &lt;= #{endDate}		 </if>		 <if test="worker!= null and worker!= ''">		  and   T.WORKER = #{worker} 		 </if>		 <if test="labidList != null and labidList.size>0">		  and   T.LAB_ID IN		   <foreach  collection="labidList" item="labid" open="("  separator="," close=")">	        	#{labid} 	  	   </foreach> 		 </if>	 </select>	 	  <!-- 查找符合条件的工时记录-->	 <select id="getWorkingHourInfoByDateAndType"  resultType="map" > 	 	SELECT T.ID,		       T.PROJECT_ID,		       T.WORKER,		       D.NAME AS CATEGORY,		       NVL(P.PROJECT_NAME, T.PROJECT_NAME) AS PROJECT_NAME,		       T.WORKING_HOUR,		       T.JOB_CONTENT,		       TO_CHAR(T.WORK_TIME, 'yyyy-mm-dd') AS WORK_TIME,		       ROWNUM  as ROW_ID		  FROM BG_WORKINGHOUR_INFO T		  LEFT JOIN BG_PROJECT_INFO P		    ON T.PROJECT_ID = P.ID		   AND P.STATUS = '1'		  LEFT JOIN BG_SYS_DATADICTIONARY D		    ON D.CODE = NVL(P.CATEGORY, T.CATEGORY)		   AND D.PCODE = 'category100002'		   AND D.VAILD = 1		 WHERE T.VALID = '1'		   AND T.STATUS = '3'		 <if test="include!= null and include.length > 0">		  and   NVL(P.CATEGORY, T.CATEGORY) IN 		   <foreach  collection="include" item="category" open="("  separator="," close=")">	        	#{category} 	  	   </foreach>		 </if>		 <if test="exclude!= null and exclude.length > 0">		  and   NVL(P.CATEGORY, T.CATEGORY) NOT IN		   <foreach  collection="exclude" item="category" open="("  separator="," close=")">	        	#{category} 	  	   </foreach>		 </if>	 	 <if test="startDate!= null and startDate!= ''">		  and   to_char(T.WORK_TIME_BEGIN,'yyyy-mm-dd') &gt;= #{startDate}		 </if>		 <if test="endDate!= null and endDate!= ''">		  and   to_char(T.WORK_TIME_END,'yyyy-mm-dd') &lt;= #{endDate}		 </if>		 <if test="userName!= null and userName!= ''">		  and   T.WORKER = #{userName} 		 </if>	 </select>	 	 <select id="getBPByWorkingHourInfo"  resultType="map" > 	 	SELECT T.ID,		       T.PROJECT_ID,		       T.WORKER,		       D.NAME AS CATEGORY,		       NVL(P.PROJECT_NAME, T.PROJECT_NAME) AS PROJECT_NAME,		       T.WORKING_HOUR,		       T.JOB_CONTENT,		       TO_CHAR(T.WORK_TIME, 'yyyy-mm-dd') AS WORK_TIME,		       ROWNUM  as ROW_ID		  FROM BG_WORKINGHOUR_INFO T		  LEFT JOIN BG_PROJECT_INFO P		    ON T.PROJECT_ID = P.ID		   AND P.STATUS = '1'		  LEFT JOIN BG_SYS_DATADICTIONARY D		    ON D.CODE = NVL(P.CATEGORY, T.CATEGORY)		   AND D.PCODE = 'category100002'		   AND D.VAILD = 1		 WHERE T.VALID = '1'		   AND T.STATUS = '3'		   AND NVL(P.CATEGORY, T.CATEGORY) = 'BP'		   AND P.RELATED_PROJECT_ID IN		 <if test="list!= null and list.size>0">		  <foreach  collection="list" item="map" open="("  separator="," close=")">	        	#{map.PROJECT_ID} 	  	   </foreach> 		 </if>		 <if test="list== null or list.size==0">		  	('')		 </if>		 <if test="startDate!= null and startDate!= ''">		  and   to_char(T.WORK_TIME_BEGIN,'yyyy-mm-dd') &gt;= #{startDate}		 </if>		 <if test="endDate!= null and endDate!= ''">		  and   to_char(T.WORK_TIME_END,'yyyy-mm-dd') &lt;= #{endDate}		 </if>		 <if test="userName!= null and userName!= ''">		  and   T.WORKER = #{userName} 		 </if>	 </select>	 	 <select id="getBPByProNumberAndHrCode"  resultType="map" > 	 	SELECT T.ID,		       T.PROJECT_ID,		       T.WORKER,		       U.HRCODE,		       U.USERALIAS,		      <!--  D.NAME AS CATEGORY, -->		       P1.PROJECT_NUMBER,		       P1.PROJECT_NAME,		       <!-- NVL(P.PROJECT_NAME, T.PROJECT_NAME) AS PROJECT_NAME, -->		      <!--  NVL(P.CATEGORY, T.CATEGORY) AS CATEGORY, -->		       'BP' AS CATEGORY,		       T.WORKING_HOUR,		       T.JOB_CONTENT,		       TO_CHAR(T.WORK_TIME, 'yyyy-mm-dd') AS WORK_TIME,		       ROWNUM AS ROW_ID		  FROM BG_WORKINGHOUR_INFO T		  LEFT JOIN BG_PROJECT_INFO P		    ON T.PROJECT_ID = P.ID		   AND P.STATUS = '1'		  LEFT JOIN BG_SYS_DATADICTIONARY D		    ON D.CODE = NVL(P.CATEGORY, T.CATEGORY)		   AND D.PCODE = 'category100002'		   AND D.VAILD = 1		  LEFT JOIN BG_PROJECT_INFO P1		    ON P1.ID = P.RELATED_PROJECT_ID		  LEFT JOIN BG_SYS_USER U		    ON U.USERNAME = T.WORKER		 WHERE T.VALID = '1'		   AND T.STATUS = '3'		   AND NVL(P.CATEGORY, T.CATEGORY) = 'BP'		   <if test="projectNumber != null and projectNumber != ''">		  	 AND P1.PROJECT_NUMBER = #{projectNumber}		   </if>		   <if test="hrCode != null and hrCode != ''">		  	 AND U.HRCODE = #{hrCode}		   </if>		   <if test="startDate != null and startDate != ''">	         And to_char(T.WORK_TIME_BEGIN,'yyyy-mm-dd') &gt;= #{startDate}	       </if>	       <if test="endDate != null and endDate != ''">	         And to_char(T.WORK_TIME_END,'yyyy-mm-dd') &lt;= #{endDate}	       </if>	 </select>	 	</mapper>