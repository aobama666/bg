<?xml version="1.0" encoding="UTF-8" ?> <!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" > <mapper namespace="com.sgcc.bg.mapper.BgWorkinghourInfoMapper" > 	 	 	 <!-- 个人工时的统计 -->	 <select id="selectForStartAndEnd"  resultType="java.lang.String" > 	 select  	      DECODE(SUBSTR(SUM(WORKING_HOUR), 1, 1), '.','0'||SUM(WORKING_HOUR),SUM(WORKING_HOUR)) AS WORKING_HOUR	 	 from BG_WORKINGHOUR_INFO where  1=1  and  VALID=1   and  STATUS=3	 <if test="StartData!= null and StartData!= ''">	  and   to_char(WORK_TIME,'yyyy-mm-dd') &gt;= #{StartData} 	 </if>	 <if test="EndData!= null and EndData!= ''">	  and   to_char(WORK_TIME,'yyyy-mm-dd') &lt;= #{EndData} 	 </if>	  <if test="worker!= null and worker!= ''">	  and   WORKER = #{worker} 	 </if>	  <if test="category!= null and category!= ''">	  and   CATEGORY = #{category} 	 </if>	 </select>	  	 	  <select id="selectForTime"  resultType="java.util.Map" > 	select T.ID,	        T.UPDATE_TIME,	        to_char(T.WORK_TIME,'yyyy-mm-dd') as  WORK_TIME,	        decode(T.CATEGORY,'KY','科研项目 ','HX','横向项目','JS','技术服务项目','NP','非项目工作')  as CATEGORY ,	        T.PROJECT_NAME,	        T. WORKING_HOUR,	        T.JOB_CONTENT,	        ROWNUM  as ROW_IDS	         from (          select 	         A.ID,             to_char(A.UPDATE_TIME,'yyyy-mm-dd') as UPDATE_TIME,             NVL(B.CATEGORY, A.CATEGORY) as CATEGORY,             NVL(B.PROJECT_NAME, A.PROJECT_NAME) as PROJECT_NAME,             A.WORKING_HOUR ,             A.JOB_CONTENT ,             A.WORKER ,             A.STATUS ,             A.VALID,             A.WORK_TIME	      from BG_WORKINGHOUR_INFO A 	       LEFT JOIN   BG_PROJECT_INFO  B  ON A.PROJECT_ID=B.ID         ) T where 1=1  and  T.VALID=1  and  T.STATUS=3 	 <if test="id!= null and id!= ''">	  and   T.ID = #{id} 	 </if>	  <if test="StartData!= null and StartData!= ''">	  and     to_char(T.WORK_TIME,'yyyy-mm-dd') &gt;= #{StartData} 	 </if>	 <if test="EndData!= null and EndData!= ''">	  and    to_char(T.WORK_TIME,'yyyy-mm-dd')  &lt;= #{EndData} 	 </if>	  <if test="worker!= null and worker!= ''">	  and   T.WORKER = #{worker} 	 </if>	  <if test="category!= null and category!= ''">	  and   T.CATEGORY = #{category} 	 </if>	  ORDER BY T.WORK_TIME	 </select>	 	 	 	 	  <select id="selectForNoCategory"  resultType="java.util.Map" >          select T.ID,	        T.UPDATE_TIME,	        to_char(T.WORK_TIME,'yyyy-mm-dd') as WORK_TIME,	        decode(T.CATEGORY,'KY','科研项目 ','HX','横向项目','JS','技术服务项目','NP','非项目工作')  as CATEGORY ,	        T.PROJECT_NAME,	        T. WORKING_HOUR,	        T.JOB_CONTENT from (          select 	         A.ID,             to_char(A.UPDATE_TIME,'yyyy-mm-dd') as UPDATE_TIME,             NVL(B.CATEGORY, A.CATEGORY) as CATEGORY,             NVL(B.PROJECT_NAME, A.PROJECT_NAME) as PROJECT_NAME,             A.WORKING_HOUR ,             A.JOB_CONTENT ,             A.WORKER ,             A.STATUS ,             A.VALID,             A.WORK_TIME	      from BG_WORKINGHOUR_INFO A 	       LEFT JOIN   BG_PROJECT_INFO  B  ON A.PROJECT_ID=B.ID          ) T where 1=1   and  T.VALID=1  and  T.STATUS=3 	 <if test="id!= null and id!= ''">	  and   T.ID = #{id} 	 </if>	    <if test="StartData!= null and StartData!= ''">	  and     to_char(T.WORK_TIME,'yyyy-mm-dd') &gt;= #{StartData} 	 </if>	 <if test="EndData!= null and EndData!= ''">	  and    to_char(T.WORK_TIME,'yyyy-mm-dd')  &lt;= #{EndData} 	 </if>	  <if test="worker!= null and worker!= ''">	  and   T.WORKER = #{worker} 	 </if>	  <if test="category!= null and category!= ''">	  and   T.CATEGORY != #{category} 	 </if>	  ORDER BY T.WORK_TIME	 </select>	 	  <select id="selectForSchedule"  resultType="java.util.Map" >          select  		 ID,SCHEDULE_DATE,SCHEDULE_WEEK,		 SCHEDULE_TYPE,IS_HOLIDAY,VALID,		 CREATE_TIME,CREATE_USER,UPDATE_TIME,UPDATE_USER	 	 from BG_SYS_WORK_SCHEDULE where  VALID=1  and  SCHEDULE_TYPE=0	 <if test="StartData!= null and StartData!= ''">	  and   to_char(SCHEDULE_DATE,'yyyy-mm-dd') &gt;= #{StartData} 	 </if>	 <if test="EndData!= null and EndData!= ''">	  and   to_char(SCHEDULE_DATE,'yyyy-mm-dd') &lt;= #{EndData} 	 </if>	 </select>	 <!-- 个人工时的管理 -->	  <select id="selectForbgWorkinghourInfo"  resultType="java.util.Map" >       SELECT                 T.ID,              T.WORK_TIME,	           decode(T.CATEGORY,'KY','科研项目 ','HX','横向项目','JS','技术服务项目','NP','非项目工作')  as CATEGORY ,	          T.PROJECT_NAME,              T.JOB_CONTENT,	          T.WORKING_HOUR,              T.APPROVER ,              T.STATUS ,              T.WORKER ,              T.PROCESS_NOTE,              T.HRCODE  as EMPLOYEENUMBER,              T.USERALIAS,              T.WORKERS	 from (          select 	         A.ID,             to_char(A.WORK_TIME,'yyyy-mm-dd') as WORK_TIME,             NVL(B.CATEGORY, A.CATEGORY) as CATEGORY,             NVL(B.PROJECT_NAME, A.PROJECT_NAME) as PROJECT_NAME,             A.JOB_CONTENT ,             A.WORKING_HOUR ,             A.APPROVER ,             A.STATUS ,             A.WORKER ,             A.VALID,             C.PROCESS_NOTE,             D.HRCODE,             E.USERALIAS,             D.USERALIAS  as WORKERS	      from  BG_WORKINGHOUR_INFO  A 	       LEFT JOIN   BG_PROJECT_INFO  B  ON A.PROJECT_ID=B.ID   	       LEFT JOIN   BG_PROCESS_RECORD C ON A.PROCESS_ID=C.ID	       LEFT JOIN   BG_SYS_USER  D  ON  A.WORKER=D.USERNAME	       LEFT JOIN   BG_SYS_USER  E  ON  A.APPROVER=E.USERNAME       ) T where 1=1   and  T.VALID=1	 <if test="id!= null and id!= ''">	  and   T.ID = #{id} 	 </if>	  <if test="StartData!= null and StartData!= ''">	  and    T.WORK_TIME &gt;= #{StartData} 	 </if>	 <if test="EndData!= null and EndData!= ''">	  and   T.WORK_TIME  &lt;= #{EndData} 	 </if>	  <if test="worker!= null and worker!= ''">	  and   T.WORKER = #{worker} 	 </if>	  <if test="category!= null and category!= ''">	  and   T.CATEGORY = #{category} 	 </if>	  <if test="projectName!= null and projectName!= ''">	  and  T.PROJECT_NAME like '%' || #{projectName} || '%' 	  </if>	 <if test="status!= null and status!= ''">	  and  T.STATUS = #{status}  	 </if>	 ORDER BY T.WORK_TIME	 </select>	 	 <select id="selectForbgWorkinghourInfos"  resultType="java.util.Map" >       SELECT                 T.ID,              T.WORK_TIME,	           decode(T.CATEGORY,'KY','科研项目 ','HX','横向项目','JS','技术服务项目','NP','非项目工作')  as CATEGORY ,	          T.PROJECT_NAME,              T.JOB_CONTENT,	          T.WORKING_HOUR,              T.APPROVER ,              decode(T.STATUS,0,'未提交',1,'审批中',2,'已退回 ',3,'已通过')  as STATUS ,              T.WORKER ,              T.PROCESS_NOTE,              T.USERALIAS,              ROWNUM  as ROW_ID	 from (          select 	         A.ID,             to_char(A.WORK_TIME,'yyyy-mm-dd') as WORK_TIME,             NVL(B.CATEGORY, A.CATEGORY) as CATEGORY,             NVL(B.PROJECT_NAME, A.PROJECT_NAME) as PROJECT_NAME,             A.JOB_CONTENT ,             A.WORKING_HOUR ,             A.APPROVER ,             A.STATUS ,             A.WORKER ,             A.VALID,             E.USERALIAS,             C.PROCESS_NOTE	      from  BG_WORKINGHOUR_INFO  A 	       LEFT JOIN   BG_PROJECT_INFO  B  ON A.PROJECT_ID=B.ID   	       LEFT JOIN   BG_PROCESS_RECORD C ON A.PROCESS_ID=C.ID	       LEFT JOIN   BG_SYS_USER  E      ON A.APPROVER=E.USERNAME       ) T where 1=1   and  T.VALID=1  	 <if test="null != ids and ids.size > 0">	    and   T.ID  in	    <foreach  collection="ids" item="id" open="("  separator="," close=")">	        #{id} 	   </foreach>	 </if>	  <if test="StartData!= null and StartData!= ''">	  and    T.WORK_TIME &gt;= #{StartData} 	 </if>	 <if test="EndData!= null and EndData!= ''">	  and   T.WORK_TIME  &lt;= #{EndData} 	 </if>	  <if test="worker!= null and worker!= ''">	  and   T.WORKER = #{worker} 	 </if>	  <if test="category!= null and category!= ''">	  and   T.CATEGORY = #{category} 	 </if>	  <if test="projectName!= null and projectName!= ''">	  and  T.PROJECT_NAME like '%' || #{projectName} || '%' 	  </if>	 <if test="status!= null and status!= ''">	  and  T.STATUS = #{status}  	 </if>	  ORDER BY T.WORK_TIME	 </select>	 	 	  <update id="updatabgWorkinghourInfo"> 	 update BG_WORKINGHOUR_INFO set		JOB_CONTENT= #{jobContent},		WORKING_HOUR= #{workingHour},		PROJECT_NAME= #{projectName}	 where 		ID= #{id}	 </update>	 	   <update id="commitbgWorkinghourInfo"> 	 update BG_WORKINGHOUR_INFO set		JOB_CONTENT= #{jobContent},		WORKING_HOUR= #{workingHour},		PROJECT_NAME= #{projectName},		STATUS= '1'	 where 		ID= #{id}	 </update>	 	  <update id="deletebgWorkinghourInfo"> 	 update BG_WORKINGHOUR_INFO set		VALID= #{valid} 	 where 		ID= #{id}	 </update>	<update id="backbgWorkinghourInfo"> 	 update BG_WORKINGHOUR_INFO set		STATUS= #{status}	 where 		ID= #{id}	 </update>	  	 <select id="selectForKilebgWorkinghourInfo" resultType="java.util.Map">	 select 		ID,		STATUS	 from   BG_WORKINGHOUR_INFO  	    where VALID=1 	 <if test="id!= null and id!= ''">	    and  ID  = #{id} 	 </if>	 	 </select> 	  <!-- 项目工时统计 -->	  <select id="selectForProjectName"  resultType="java.util.Map" >  	  SELECT  *  from (  SELECT   PROJECT_NAME, PROJECT_ID , WBS_NUMBER  , SUM(WORKING_HOUR)  as  WORKING_HOUR   from(	   select 	         A.ID,             to_char(A.WORK_TIME,'yyyy-mm-dd') as WORK_TIME,             NVL(B.CATEGORY, A.CATEGORY) as CATEGORY,             NVL(B.PROJECT_NAME, A.PROJECT_NAME) as PROJECT_NAME,             B.WBS_NUMBER,             A.PROJECT_ID,             A.JOB_CONTENT ,             A.WORKING_HOUR ,             A.APPROVER ,             A.STATUS ,             A.WORKER ,             A.VALID,             C.PROCESS_NOTE,             D.HRCODE,             A.UPDATE_TIME ,             D.USERALIAS	      from  BG_WORKINGHOUR_INFO  A 	       LEFT JOIN   BG_PROJECT_INFO  B  ON A.PROJECT_ID=B.ID   	       LEFT JOIN   BG_PROCESS_RECORD C ON A.PROCESS_ID=C.ID           LEFT JOIN   BG_SYS_USER  D  ON  A.WORKER=D.USERNAME         where            A.VALID=1  AND  A.CATEGORY!='NP'  and   A.STATUS=3           <if test="StartData!= null and StartData!= ''">	           and   to_char(A.WORK_TIME,'yyyy-mm-dd') &gt;= #{StartData} 	       </if>	       <if test="EndData!= null and EndData!= ''">	           and   to_char(A.WORK_TIME,'yyyy-mm-dd') &lt;= #{EndData} 	       </if>	       <if test="projectName!= null and projectName!= ''">	          and  A.PROJECT_NAME like '%' || #{projectName} || '%' 	       </if>           <if test="worker!= null and worker!= ''">	          and   D.USERALIAS like '%' || #{worker} || '%' 	       </if>    ) T   where 1=1     	  GROUP BY  T.PROJECT_NAME ,T.PROJECT_ID , WBS_NUMBER    	)  	  </select> 	  	  	  <select id="selectForProjectNameXQ"  resultType="java.util.Map" >  	     SELECT   PROJECT_NAME, PROJECT_ID , WBS_NUMBER  , SUM(WORKING_HOUR)  as  WORKING_HOUR ,HRCODE,USERALIAS  from(	   select 	         A.ID,             to_char(A.WORK_TIME,'yyyy-mm-dd') as WORK_TIME,              decode(T.CATEGORY,'KY','科研项目 ','HX','横向项目','JS','技术服务项目','NP','非项目工作')  as CATEGORY ,             NVL(B.CATEGORY, A.CATEGORY) as CATEGORY,             NVL(B.PROJECT_NAME, A.PROJECT_NAME) as PROJECT_NAME,             B.WBS_NUMBER,             A.PROJECT_ID,             A.JOB_CONTENT ,             A.WORKING_HOUR ,             A.APPROVER ,             A.STATUS ,             A.WORKER ,             A.VALID,             C.PROCESS_NOTE,             D.HRCODE,             A.UPDATE_TIME ,             D.USERALIAS	      from  BG_WORKINGHOUR_INFO  A 	       LEFT JOIN   BG_PROJECT_INFO  B  ON A.PROJECT_ID=B.ID   	       LEFT JOIN   BG_PROCESS_RECORD C ON A.PROCESS_ID=C.ID           LEFT JOIN   BG_SYS_USER  D  ON  A.WORKER=D.USERNAME         where            A.VALID=1  AND  A.CATEGORY!='NP'  and   A.STATUS=3 	          <if test="StartData!= null and StartData!= ''">	           and   to_char(A.WORK_TIME,'yyyy-mm-dd') &gt;= #{StartData} 	          </if>	          <if test="EndData!= null and EndData!= ''">	           and   to_char(A.WORK_TIME,'yyyy-mm-dd') &lt;= #{EndData} 	          </if>	          <if test="projectName!= null and projectName!= ''">	            	            and  A.PROJECT_NAME like '%' || #{projectName} || '%' 	          </if>              <if test="Wbsnumber!= null and Wbsnumber!= ''">               and  B.WBS_NUMBER  like '%' || #{Wbsnumber} || '%' 	          </if>  	          <if test="worker!= null and worker!= ''">	          and   D.USERALIAS like '%' || #{worker} || '%' 	          </if>	              ) T   where 1=1     	  GROUP BY  T.PROJECT_NAME ,T.PROJECT_ID , WBS_NUMBER  ,HRCODE,USERALIAS 	  </select> 	  	  	  	  	  	  	  	  	  	  	  	  	  <select id="selectForProjectNameAndWorker"  resultType="java.util.Map" > 	  SELECT   PROJECT_NAME, PROJECT_ID , WBS_NUMBER  , SUM(WORKING_HOUR)  as  WORKING_HOUR ,HRCODE,USERALIAS   from(	   select 	         A.ID,             to_char(A.WORK_TIME,'yyyy-mm-dd') as WORK_TIME,             NVL(B.CATEGORY, A.CATEGORY) as CATEGORY,             NVL(B.PROJECT_NAME, A.PROJECT_NAME) as PROJECT_NAME,             B.WBS_NUMBER,             A.PROJECT_ID,             A.JOB_CONTENT ,             A.WORKING_HOUR ,             A.APPROVER ,             A.STATUS ,             A.WORKER ,             A.VALID,             C.PROCESS_NOTE,             D.HRCODE,             A.UPDATE_TIME ,                         D.USERALIAS	      from  BG_WORKINGHOUR_INFO  A 	       LEFT JOIN   BG_PROJECT_INFO  B  ON A.PROJECT_ID=B.ID   	       LEFT JOIN   BG_PROCESS_RECORD C ON A.PROCESS_ID=C.ID         LEFT JOIN   BG_SYS_USER  D  ON  A.WORKER=D.USERNAME                   where            A.VALID=1  AND  A.CATEGORY!='NP'  and   A.STATUS=3           <if test="StartData!= null and StartData!= ''">	           and   to_char(A.WORK_TIME,'yyyy-mm-dd') &gt;= #{StartData} 	       </if>	       <if test="EndData!= null and EndData!= ''">	           and   to_char(A.WORK_TIME,'yyyy-mm-dd') &lt;= #{EndData} 	       </if>	       <if test="projectName!= null and projectName!= ''">	          and   A.PROJECT_NAME like '%' || #{projectName} || '%' 	       </if>	        <if test="Wbsnumber!= null and Wbsnumber!= ''">	          and   B.WBS_NUMBER= #{Wbsnumber}	       </if>             <if test="worker!= null and worker!= ''">	          and   D.USERALIAS like '%' || #{worker} || '%' 	       </if>      ) T   where 1=1     	  GROUP BY  T.PROJECT_NAME , T.PROJECT_ID , T.WBS_NUMBER  ,T.HRCODE, T.USERALIAS              	 </select>	 	 	  <select id="selectForWorker"  resultType="java.util.Map" >      SELECT * from (     select 	         A.ID,             to_char(A.WORK_TIME,'yyyy-mm-dd') as WORK_TIME,             DECODE( NVL (B. CATEGORY, A . CATEGORY) , 'NP', '1','0')  AS CATEGORY,             NVL(B.PROJECT_NAME, A.PROJECT_NAME) as PROJECT_NAME,             A.PROJECT_ID,             B.WBS_NUMBER,             A.JOB_CONTENT ,             A.WORKING_HOUR ,             A.APPROVER ,             A.STATUS ,             A.WORKER ,             A.VALID,             C.PROCESS_NOTE,             D.HRCODE,             A.UPDATE_TIME ,             D.USERALIAS	      from  BG_WORKINGHOUR_INFO  A 	       LEFT JOIN   BG_PROJECT_INFO  B  ON A.PROJECT_ID=B.ID   	       LEFT JOIN   BG_PROCESS_RECORD C ON A.PROCESS_ID=C.ID           LEFT JOIN   BG_SYS_USER  D  ON  A.WORKER=D.USERNAME         where            A.VALID=1  AND  A.STATUS=3	                  <if test="StartData!= null and StartData!= ''">	           and   to_char(A.WORK_TIME,'yyyy-mm-dd') &gt;= #{StartData} 	       </if>	       <if test="EndData!= null and EndData!= ''">	           and   to_char(A.WORK_TIME,'yyyy-mm-dd') &lt;= #{EndData} 	       </if>      )  T where  1=1   and T.CATEGORY=0            <if test="projectName!= null and projectName!= ''">	          and  T.PROJECT_NAME = #{projectName} 	        </if>            <if test="worker!= null and worker!= ''">	          and   T.USERALIAS  = #{worker}  	        </if>	        <if test="Wbsnumber!= null and Wbsnumber!= ''">	          and   T.WBS_NUMBER  = #{Wbsnumber}  	       </if>	        <if test="hrcode!= null and hrcode!= ''">	          and   T.HRCODE  = #{hrcode}  	       </if>	       ORDER BY T.WORK_TIME	 </select>	 	 <!-- 组织工时统计 -->	 	  <select id="selectForDept"  resultType="java.lang.String" >  	 select  	     DECODE(SUBSTR(SUM(WORKING_HOUR), 1, 1), '.','0'||SUM(WORKING_HOUR),SUM(WORKING_HOUR)) AS WORKING_HOUR	     	 	 from BG_WORKINGHOUR_INFO where  1=1  and  VALID=1   and  STATUS=3	 <if test="StartData!= null and StartData!= ''">	  and   to_char(WORK_TIME,'yyyy-mm-dd') &gt;= #{StartData} 	 </if>	 <if test="EndData!= null and EndData!= ''">	  and   to_char(WORK_TIME,'yyyy-mm-dd') &lt;= #{EndData} 	 </if>	  <if test="deptid!= null and deptid!= ''">	  and   DEPT_ID = #{deptid} 	 </if>	  <if test="ladid!= null and ladid!= ''">	  and   LAB_ID = #{ladid} 	 </if>	 <if  test="worker!= null and worker!= ''">	  and   WORKER = #{worker} 	 </if>	  <if  test="category!= null and category!= ''">	  and   CATEGORY = #{category} 	  </if>	   <if  test="Nocategory!= null and Nocategory!= ''">	  and   CATEGORY != #{Nocategory} 	  </if>	  	 </select>	 	 	   <select id="selectForDepts"  resultType="java.lang.String" > 	 select  	   		  DECODE(SUBSTR(SUM(WORKING_HOUR), 1, 1), '.','0'||SUM(WORKING_HOUR),SUM(WORKING_HOUR)) AS WORKING_HOUR	 	 from BG_WORKINGHOUR_INFO where  1=1  and  VALID=1   and  STATUS=3	 <if test="StartData!= null and StartData!= ''">	  and   to_char(WORK_TIME,'yyyy-mm-dd') &gt;= #{StartData} 	 </if>	 <if test="EndData!= null and EndData!= ''">	  and   to_char(WORK_TIME,'yyyy-mm-dd') &lt;= #{EndData} 	 </if>	  <if test="deptid!= null and deptid!= ''">	  and   DEPT_ID = #{deptid} 	 </if>	 	 <if test="ladid != null and ladid.size > 0">	    and    LAB_ID  in	    <foreach  collection="ladid" item="ladids" open="("  separator="," close=")">	        #{ladids} 	   </foreach>	  </if>	 <if  test="worker!= null and worker!= ''">	  and   WORKER = #{worker} 	 </if>	  <if  test="category!= null and category!= ''">	  and   CATEGORY = #{category} 	  </if>	   <if  test="Nocategory!= null and Nocategory!= ''">	  and   CATEGORY != #{Nocategory} 	  </if>	  	 </select>	 	   <select id="selectForNumber"  resultType="java.util.Map" > 	   select ID, WORK_TIME, HRCODE,USERALIAS,	     decode(CATEGORY,'KY','科研项目 ','HX','横向项目','JS','技术服务项目','NP','非项目工作')  as CATEGORY ,	   WBS_NUMBER,PROJECT_NAME,JOB_CONTENT,WORKING_HOUR  from (	    select 	         A.ID,             to_char(A.WORK_TIME,'yyyy-mm-dd') as WORK_TIME,             NVL(B.CATEGORY, A.CATEGORY) as CATEGORY,             NVL(B.PROJECT_NAME, A.PROJECT_NAME) as PROJECT_NAME,             B.WBS_NUMBER,             A.JOB_CONTENT ,             A.WORKING_HOUR ,             A.APPROVER ,             A.STATUS ,             A.WORKER ,             A.VALID,             A.DEPT_ID,             A.LAB_ID,             C.PROCESS_NOTE,             D.HRCODE,             A.UPDATE_TIME ,             D.USERALIAS	      from  BG_WORKINGHOUR_INFO  A 	       LEFT JOIN   BG_PROJECT_INFO  B  ON A.PROJECT_ID=B.ID   	       LEFT JOIN   BG_PROCESS_RECORD C ON A.PROCESS_ID=C.ID           LEFT JOIN   BG_SYS_USER  D  ON  A.WORKER=D.USERNAME         where            A.VALID=1  AND    A.STATUS=3	   )  where  1=1	  	 <if test="StartData!= null and StartData!= ''">	  and   WORK_TIME  &gt;= #{StartData} 	 </if>	 <if test="EndData!= null and EndData!= ''">	  and    WORK_TIME  &lt;= #{EndData} 	 </if>	  <if test="deptid!= null and deptid!= ''">	  and   DEPT_ID = #{deptid} 	 </if>	  <if test="ladid!= null and ladid!= ''">	  and   LAB_ID = #{ladid} 	 </if>	 <if  test="worker!= null and worker!= ''">	  and   WORKER = #{worker} 		 </if>	  <if  test="category!= null and category!= ''">	  and   CATEGORY = #{category} 	  </if>	   <if  test="Nocategory!= null and Nocategory!= ''">	  and   CATEGORY != #{Nocategory} 	  </if>	   <if  test="showdata!= null and showdata!= ''">	    and   WORKING_HOUR > #{showdata} 	  </if>	  	  </select>	  	  	  	  	 <select id="selectForUser"  resultType="java.util.Map" > select   *  from ( SELECT U.USERID,       U.USERNAME,       U.HRCODE,       U.USERALIAS,       D.PDEPTID,       D2.DEPTNAME PDEPTNAME,       D.DEPTID,       D.DEPTNAME,       D.PDEPTCODE,       D.DEPTCODE,       U.STATE,       U.MOBILE,       U.EMAIL,       D.TYPE  FROM BG_SYS_USER_DEPT_RELATION R INNER JOIN BG_SYS_USER U    ON U.USERID = R.USERID INNER JOIN BG_SYS_DEPT D    ON D.DEPTID = R.DEPTID INNER JOIN BG_SYS_DEPT D2    ON D.PDEPTID = D2.DEPTID WHERE 1 = 1     AND SYSDATE BETWEEN R.EXP_START_TIME AND R.EXP_END_TIME   AND ((R.SRC = 0 AND NOT EXISTS        (SELECT R1.USERID            FROM BG_SYS_USER_DEPT_RELATION R1           WHERE R1.USERID = R.USERID             AND SYSDATE BETWEEN R1.EXP_START_TIME AND R1.EXP_END_TIME             AND R1.VALID = 1             AND R1.SRC = 1)) OR R.SRC IN (1, 2))   AND R.VALID = 1  )  where    1=1      <if  test="pdeptid!= null and pdeptid!= ''">	  and   PDEPTID = #{pdeptid} 	  </if>      <if  test="deptid!= null and deptid!= ''">	  and  DEPTID = #{deptid} 	  </if>	  <if  test="useralias!= null and useralias!= ''">	   and  USERALIAS like '%' || #{useralias} || '%' 	  </if>	    <if  test="username!= null and username!= ''">	  and  USERNAME = #{username} 	  	  </if>   	 </select>	 	 	 	 	 	  	 <select id="selectForUsers"  resultType="java.util.Map" > select   *  from ( SELECT U.USERID,       U.USERNAME,       U.HRCODE,       U.USERALIAS,       D.PDEPTID,       D2.DEPTNAME PDEPTNAME,       D.DEPTID,       D.DEPTNAME,       D.PDEPTCODE,       D.DEPTCODE,       U.STATE,       U.MOBILE,       U.EMAIL,       D.TYPE  FROM BG_SYS_USER_DEPT_RELATION R INNER JOIN BG_SYS_USER U    ON U.USERID = R.USERID INNER JOIN BG_SYS_DEPT D    ON D.DEPTID = R.DEPTID INNER JOIN BG_SYS_DEPT D2    ON D.PDEPTID = D2.DEPTID WHERE 1 = 1     AND SYSDATE BETWEEN R.EXP_START_TIME AND R.EXP_END_TIME   AND ((R.SRC = 0 AND NOT EXISTS        (SELECT R1.USERID            FROM BG_SYS_USER_DEPT_RELATION R1           WHERE R1.USERID = R.USERID             AND SYSDATE BETWEEN R1.EXP_START_TIME AND R1.EXP_END_TIME             AND R1.VALID = 1             AND R1.SRC = 1)) OR R.SRC IN (1, 2))   AND R.VALID = 1  )  where    1=1      <if  test="pdeptid!= null and pdeptid!= ''">	  and   PDEPTID = #{pdeptid} 	  </if>      <if  test=" deptid!= null and deptid.size > 0 ">	     and    DEPTID  in	    <foreach  collection="deptid" item="deptids" open="("  separator="," close=")">	        #{deptids} 	   </foreach>	  </if>	  <if  test="useralias!= null and useralias!= ''">	   and  USERALIAS like '%' || #{useralias} || '%' 	  </if>	    <if  test="username!= null and username!= ''">	  and  USERNAME = #{username} 	  	  </if>   	 </select>	 	 	   <!--  获取组织树 -->    <select id="getAllOrganTree" resultType="java.util.Map">    SELECT  * from (        	SELECT T.DEPTID,		       T.PDEPTID,		       T.DEPTCODE,		       T.DEPTNAME,		       T.PDEPTCODE,		       T.PDEPTNAME,		       T.TYPE,		       'ORGAN' DATATYPE,		       		       <choose>					<when test="level!=null and level == '0'">					    0					</when>					<when test="level!=null and level == '1'">					    CASE WHEN T.TYPE = 1 THEN 0					         ELSE  (SELECT COUNT(S.DEPTID)							          FROM (SELECT *									          FROM BG_SYS_DEPT D1									         WHERE 1 = 1									           <if test="limit!=null and limit!='' and limit.length>2">											    AND D1.DEPTID IN (${limit})											   </if>											   <if test="level!=null and level!=''">											   	AND #{level, jdbcType = DOUBLE} >= NVL(D1.TYPE, 0)  											   </if>									        ) S							         WHERE S.PDEPTCODE = T.DEPTCODE							           AND S.DEPTCODE IS NOT NULL							           AND S.VALID = 1)							  END					</when>					<otherwise>					   (SELECT COUNT(S.DEPTID)				          FROM (SELECT *						          FROM BG_SYS_DEPT D1						         WHERE 1 = 1						           <if test="limit!=null and limit!=''">								    AND D1.DEPTID IN (${limit})								   </if>								   <if test="level!=null and level!=''">								   	AND #{level} >= D1.TYPE 								   </if>						        ) S				         WHERE S.PDEPTCODE = T.DEPTCODE				           AND S.DEPTCODE IS NOT NULL				           AND S.VALID = 1)					 </otherwise>				</choose>		        CHILD_NUM		  FROM (SELECT *		          FROM BG_SYS_DEPT D1		         WHERE 1 = 1		           <if test="limit!=null and limit!=''">				    AND D1.DEPTID IN (${limit})				   </if>				   <if test="level!=null and level!=''">				   	AND #{level} >= D1.TYPE 				   </if>		        ) T		 WHERE T.DEPTCODE IS NOT NULL		   AND T.VALID = 1		 START WITH T.DEPTID = NVL((SELECT DEPTID FROM BG_SYS_DEPT WHERE DEPTCODE = #{rootId, jdbcType = VARCHAR}),'XXX')		CONNECT BY PRIOR T.DEPTID = T.PDEPTID		 ORDER SIBLINGS BY T.SORT_ID NULLS LAST		 )     where  1=1		 		  <if  test="pdeptid!= null and pdeptid!= ''">	        and   PDEPTID = #{pdeptid} 	      </if>          <if  test="deptid!= null and deptid!= ''">	        and  DEPTID = #{deptid} 	      </if>		 		     </select>	 	 	 <select id="selectFordepts"  resultType="java.util.Map" > select   DISTINCT  PDEPTID , PDEPTNAME ,  DEPTID ,DEPTNAME  from ( SELECT U.USERID,       U.USERNAME,       U.HRCODE,       U.USERALIAS,       D.PDEPTID,       D2.DEPTNAME PDEPTNAME,       D.DEPTID,       D.DEPTNAME,       D.PDEPTCODE,       D.DEPTCODE,       U.STATE,       U.MOBILE,       U.EMAIL,       D.TYPE  FROM BG_SYS_USER_DEPT_RELATION R INNER JOIN BG_SYS_USER U    ON U.USERID = R.USERID INNER JOIN BG_SYS_DEPT D    ON D.DEPTID = R.DEPTID INNER JOIN BG_SYS_DEPT D2    ON D.PDEPTID = D2.DEPTID WHERE 1 = 1     AND SYSDATE BETWEEN R.EXP_START_TIME AND R.EXP_END_TIME   AND ((R.SRC = 0 AND NOT EXISTS        (SELECT R1.USERID            FROM BG_SYS_USER_DEPT_RELATION R1           WHERE R1.USERID = R.USERID             AND SYSDATE BETWEEN R1.EXP_START_TIME AND R1.EXP_END_TIME             AND R1.VALID = 1             AND R1.SRC = 1)) OR R.SRC IN (1, 2))   AND R.VALID = 1  )  where    1=1      <if  test="pdeptid!= null and pdeptid!= ''">	  and   PDEPTID = #{pdeptid} 	   	  </if>      <if  test="deptid!= null and deptid!= ''">	  and  DEPTID = #{deptid} 	  </if>   	 </select>	 	 	  <select id="selectForRole"  resultType="java.util.Map" > 	 select  		  	DECODE (						 ROLE,						0,						'项目参与人',						1,						'项目负责人',						2,						'项目执行人'					) AS ROLE	 	 from BG_PROJECT_USER where  1=1     and  STATUS=1	 	  <if test="projectId!= null and projectId!= ''">	  and   PROJECT_ID = #{projectId} 	 </if>	  <if test="hrcode!= null and hrcode!= ''">	  and   HRCODE = #{hrcode} 	 </if>	    ORDER BY  UPDATE_DATE  desc	 </select>	 	 	  <select id="selectForUserName"  resultType="java.util.Map" > 	   select   DISTINCT		 A.HRCODE,A.PROJECT_ID,B.USERALIAS ,B.USERNAME	 	 from BG_PROJECT_USER  A          INNER JOIN BG_SYS_USER B		    ON A.HRCODE = B.HRCODE		    AND B.VALID = 1  where  1=1          and  A.STATUS=1          and  A.ROLE=1           <if test="userName!= null and userName!= ''">	     and  B.USERNAME =#{userName} 	      </if>        	 </select>	 	 <select id="selectCheckHous"  resultType="java.util.Map" >      SELECT  WORK_TIME,  SUM(WORKING_HOUR)as WORKING_HOUR from (          SELECT                 T.ID,              T.WORK_TIME,	          T.CATEGORY,	          T.PROJECT_NAME,              T.JOB_CONTENT,	          T.WORKING_HOUR,              T.APPROVER ,              T.STATUS ,              T.WORKER ,              T.PROCESS_NOTE,              T.HRCODE  as EMPLOYEENUMBER,              T.USERALIAS,              T.WORKERS	 from (          select 	         A.ID,             to_char(A.WORK_TIME,'yyyy-mm-dd') as WORK_TIME,             NVL(B.CATEGORY, A.CATEGORY) as CATEGORY,             NVL(B.PROJECT_NAME, A.PROJECT_NAME) as PROJECT_NAME,             A.JOB_CONTENT ,             A.WORKING_HOUR ,             A.APPROVER ,             A.STATUS ,             A.WORKER ,             A.VALID,             C.PROCESS_NOTE,             D.HRCODE,             E.USERALIAS,             D.USERALIAS  as WORKERS	      from  BG_WORKINGHOUR_INFO  A 	       LEFT JOIN   BG_PROJECT_INFO  B  ON A.PROJECT_ID=B.ID   	       LEFT JOIN   BG_PROCESS_RECORD C ON A.PROCESS_ID=C.ID	       LEFT JOIN   BG_SYS_USER  D  ON  A.WORKER=D.USERNAME	       LEFT JOIN   BG_SYS_USER  E  ON  A.APPROVER=E.USERNAME       ) T where 1=1   and  T.VALID=1           <if test="null != ids and ids.size > 0">	    and    T.ID  in	    <foreach  collection="ids" item="id" open="("  separator="," close=")">	        #{id} 	   </foreach>	 </if>         ) where 1=1  GROUP BY    WORK_TIME 	 </select>	 	  <select id="selectCheckWorker"  resultType="java.util.Map" >      SELECT  WORK_TIME,  SUM(WORKING_HOUR)as WORKING_HOUR from (          SELECT                 T.ID,              T.WORK_TIME,	          T.CATEGORY,	          T.PROJECT_NAME,              T.JOB_CONTENT,	          T.WORKING_HOUR,              T.APPROVER ,              T.STATUS ,              T.WORKER ,              T.PROCESS_NOTE,              T.HRCODE  as EMPLOYEENUMBER,              T.USERALIAS,              T.WORKERS	 from (          select 	         A.ID,             to_char(A.WORK_TIME,'yyyy-mm-dd') as WORK_TIME,             NVL(B.CATEGORY, A.CATEGORY) as CATEGORY,             NVL(B.PROJECT_NAME, A.PROJECT_NAME) as PROJECT_NAME,             A.JOB_CONTENT ,             A.WORKING_HOUR ,             A.APPROVER ,             A.STATUS ,             A.WORKER ,             A.VALID,             C.PROCESS_NOTE,             D.HRCODE,             E.USERALIAS,             D.USERALIAS  as WORKERS	      from  BG_WORKINGHOUR_INFO  A 	       LEFT JOIN   BG_PROJECT_INFO  B  ON A.PROJECT_ID=B.ID   	       LEFT JOIN   BG_PROCESS_RECORD C ON A.PROCESS_ID=C.ID	       LEFT JOIN   BG_SYS_USER  D  ON  A.WORKER=D.USERNAME	       LEFT JOIN   BG_SYS_USER  E  ON  A.APPROVER=E.USERNAME	         where            A.VALID=1  AND    A.STATUS IN (3)       ) T where 1=1   and  T.VALID=1           	        <if test="userName!= null and userName!= ''">	     and  T .WORKER =#{userName} 	   </if>	    <if test="workTime!= null and workTime!= ''">	     and  T .WORK_TIME =#{workTime} 	   </if>      ) where 1=1  GROUP BY    WORK_TIME 	 </select>	 	  <select id="selectCheckTime"  resultType="java.util.Map" > 	select T.ID,	        T.UPDATE_TIME,	        to_char(T.WORK_TIME,'yyyy-mm-dd') as  WORK_TIME,	        T.CATEGORY,	        T.PROJECT_NAME,	        T. WORKING_HOUR,	        T.JOB_CONTENT,	        ROWNUM  as ROW_IDS	         from (          select 	         A.ID,             to_char(A.UPDATE_TIME,'yyyy-mm-dd') as UPDATE_TIME,             NVL(B.CATEGORY, A.CATEGORY) as CATEGORY,             NVL(B.PROJECT_NAME, A.PROJECT_NAME) as PROJECT_NAME,             A.WORKING_HOUR ,             A.JOB_CONTENT ,             A.WORKER ,             A.STATUS ,             A.VALID,             A.WORK_TIME	      from BG_WORKINGHOUR_INFO A  LEFT JOIN   BG_PROJECT_INFO  B  ON A.PROJECT_ID=B.ID           ) T where 1=1  and  T.VALID=1   	 <if test="id!= null and id!= ''">	  and   T.ID = #{id} 	 </if>	  <if test="StartData!= null and StartData!= ''">	  and     to_char(T.WORK_TIME,'yyyy-mm-dd') &gt;= #{StartData} 	 </if>	 <if test="EndData!= null and EndData!= ''">	  and    to_char(T.WORK_TIME,'yyyy-mm-dd')  &lt;= #{EndData} 	 </if>	  <if test="worker!= null and worker!= ''">	  and   T.WORKER = #{worker} 	 </if>	  <if test="category!= null and category!= ''">	  and   T.CATEGORY = #{category} 	 </if>	 	 </select>	 	  	</mapper>