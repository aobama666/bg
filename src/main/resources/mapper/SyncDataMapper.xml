<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 
	namespace：必须与对应的接口全类名一致
	id:必须与对应接口的某个对应的方法名一致
 -->
<mapper namespace="com.sgcc.bg.mapper.SyncDataMapper">
	<delete id="deleteErpHrOrgan">
		DELETE FROM BG_ERP_HR_DEPT
	</delete>
	<insert id="addErpHrDept"  parameterType="com.sgcc.bg.model.HRDept">
		INSERT INTO  BG_ERP_HR_DEPT
			(DEPTID,DEPTNAME,DEPTTYPE,PARENTID,UPDATEDATE)
		VALUES
			(
			 #{deptId,jdbcType=VARCHAR}, 
		     #{deptName,jdbcType=VARCHAR},
			 #{deptType,jdbcType=VARCHAR},
			 #{parentId,jdbcType=VARCHAR},
			 SYSDATE
			)
	</insert>
	<!--更新前先将组织的状态置为失效 -->
	<update id="invalidHrOrganData">
		UPDATE BG_SYS_DEPT D 
			SET D.VALID=0,D.UPDATE_USER = 'admin',D.UPDATE_DATE = SYSDATE
		 WHERE D.SRC = 0 
	</update>
	<!--更新HR机构-->
	<update id="syncHrOrganData">
		MERGE INTO BG_SYS_DEPT D
		USING (SELECT DEPTID DEPTCODE,
		              /*DECODE(DEPTTYPE, 'UNIT', 0, 'DEPT', 1, 'LAB', 2) TYPE,*/
						case
						when PARENTID is null then
						'-1'
						when parentid in
						(select deptid from BG_ERP_HR_DEPT where parentid is null) then
						'0'
						when parentid in
						(select deptid
						from BG_ERP_HR_DEPT
						where parentid = (select deptid
						from BG_ERP_HR_DEPT
						where parentid is null)) then
						'1'
						else
						'2'
						end TYPE,
		              DEPTNAME,
		              PARENTID PDEPTCODE
		         FROM BG_ERP_HR_DEPT) T
		ON (D.SRC = 0 AND D.DEPTCODE = T.DEPTCODE)
		WHEN MATCHED THEN
		  UPDATE
		     SET D.VALID=1,D.DEPTNAME = T.DEPTNAME,D.TYPE = T.TYPE,D.UPDATE_USER = 'admin',D.UPDATE_DATE = SYSDATE
		WHEN NOT MATCHED THEN
		  INSERT
		    (DEPTID , DEPTCODE, DEPTNAME, PDEPTCODE,TYPE,SRC,CREATE_USER,CREATE_DATE,UPDATE_USER,UPDATE_DATE,VALID)
		  VALUES
		    (SYS_GUID(),T.DEPTCODE, T.DEPTNAME,T.PDEPTCODE, T.TYPE, 0,'admin',SYSDATE,'admin',SYSDATE,1)
	</update>
	<!-- 更新HR机构(上级部门) -->
	<update id="syncHrFatherData">
		MERGE INTO BG_SYS_DEPT A
		USING (SELECT DEPTID, DEPTCODE, DEPTNAME, TYPE FROM BG_SYS_DEPT) B
		ON (A.SRC = 0 AND A.PDEPTCODE = B.DEPTCODE)
		WHEN MATCHED THEN
			UPDATE
				SET A.PDEPTNAME = B.DEPTNAME,A.PDEPTID = B.DEPTID,A.UPDATE_USER = 'admin',A.UPDATE_DATE = SYSDATE
	</update>
	<!--失效未同步的HR机构-->
	<!-- <update id="invalidHrOrganData">
		UPDATE BG_SYS_DEPT D SET D.VALID=0,D.UPDATE_USER = 'admin',D.UPDATE_DATE = SYSDATE
		 WHERE D.SRC = 0 
		  AND 
		  D.DEPTID IN 
		 	(SELECT A.DEPTID 
				FROM BG_SYS_DEPT A LEFT JOIN BG_ERP_HR_DEPT B
				ON A.DEPTCODE=B.DEPTID
		  	 WHERE A.SRC=0 AND B.DEPTID IS NULL)
	</update> -->
	
	<!-- 删除中间表人员信息 -->
	<delete id="deleteErpHrUser">
		DELETE FROM BG_ERP_HR_USER
	</delete>
	<!-- 同步hr人员-->
	<insert id="addErpHrUser"  parameterType="com.sgcc.bg.model.HRUser">
		INSERT INTO BG_ERP_HR_USER
		    ( HRCODE, USERNAME,     USERALIAS, USERSTATUS,  USERSEX,  BIRTHDATE,
		      JOBDATE, USERDEPTCODE, USERDEPTNAME, USERPOSTCODE, USERPOSTNAME,
		      USERSTATION, USERMAJOR, USEREDU, USERCARD, USERTEL, USERPHONE, 
		      USEREMAIL, USERPOSTALCODE, USERADDR, USERTAX, USERNATION, 
		      USERCOUNTRY, EMPLOYEENUMBER , UPDATE_DATE)
		  VALUES
		    ( #{hrCode,jdbcType=VARCHAR},  #{userName,jdbcType=VARCHAR},  #{userAlias,jdbcType=VARCHAR}, 
		      #{userStatus,jdbcType=VARCHAR},  #{userSex,jdbcType=VARCHAR},  #{birthDate,jdbcType=VARCHAR}, 
		      #{jobdate,jdbcType=VARCHAR},  #{userDeptCode,jdbcType=VARCHAR},  #{userDeptName,jdbcType=VARCHAR}, 
		      #{userPostCode,jdbcType=VARCHAR},  #{userPostName,jdbcType=VARCHAR},  #{userStation,jdbcType=VARCHAR},
		      #{userMajor,jdbcType=VARCHAR},  #{userEdu,jdbcType=VARCHAR},  #{userCard,jdbcType=VARCHAR}, 
		      #{userTel,jdbcType=VARCHAR},  #{userPhone,jdbcType=VARCHAR},  #{userEmail,jdbcType=VARCHAR}, 
		      #{userPostalCode,jdbcType=VARCHAR},  #{userAddr,jdbcType=VARCHAR},  #{userTax,jdbcType=VARCHAR}, 
		      #{userNation,jdbcType=VARCHAR},  #{userCountry,jdbcType=VARCHAR},  #{employeeNumber,jdbcType=VARCHAR},
		      SYSDATE
		    )
	</insert>
	<!-- 删除门户中间表人员信息 -->
	<delete id="deleteMhUser">
		DELETE FROM BG_MH_USER
	</delete>
	<!-- 同步门户中间表人员信息 -->
	<insert id="addMhHrUser"  parameterType="String">
		INSERT INTO BG_MH_USER
		     ( cn,
 			  fullname,
  			  sgccdeptname,
  			  sgcchrcode,
  			  sgcchrusercode,
 			  login_pwd,
 			  datecreated
 			 )
		  VALUES
		    ( #{cn,jdbcType=VARCHAR},  
		      #{fullname,jdbcType=VARCHAR},
		      #{sgccdeptname,jdbcType=VARCHAR},
		      #{sgcchrcode,jdbcType=VARCHAR},
		      #{sgcchrusercode,jdbcType=VARCHAR},
		      #{login_pwd,jdbcType=VARCHAR},
		      sysdate
		    )
	</insert>
	<!--更新HR临时员工数据的门户信息-->
	<update id="syncErpHrUserDataByMh">
		MERGE INTO BG_ERP_HR_USER U
		USING (SELECT CN,
		              FULLNAME,
		              SGCCDEPTNAME,
		              SGCCHRCODE,
		              SGCCHRUSERCODE,
		              LOGIN_PWD,
		              DATECREATED
		         FROM BG_MH_USER) T
		ON (U.HRCODE = T.SGCCHRUSERCODE)
		WHEN MATCHED THEN
		  UPDATE SET U.USERNAME = T.CN,U.UPDATE_DATE=SYSDATE
	</update>
	<!--更新HR员工-->
	<update id="syncHrUserData">
		MERGE INTO BG_SYS_USER U
		USING (SELECT HRCODE, USERNAME,USERALIAS,
		              DECODE(USERSEX, '男', 1, '女', 2, 0) SEX,
		              DECODE(USERSTATUS, '激活', 0, '退休', 1, '离职', 2, '-1') USERSTATUS,
		              DECODE(BIRTHDATE,
		                     '00000000',
		                     SYSDATE,
		                     TO_DATE(BIRTHDATE, 'YYYYMMDD')) BIRTHDATE,
		              DECODE(JOBDATE,
		                     '00000000',
		                     SYSDATE,
		                     TO_DATE(JOBDATE, 'YYYYMMDD')) JOBDATE,
		              USERDEPTCODE,USERDEPTNAME, USERPOSTCODE,USERPOSTNAME, USERSTATION,
		              USERMAJOR,USEREDU, USERCARD, USERTEL, USERPHONE, USEREMAIL,
		              USERPOSTALCODE, USERADDR, USERTAX,USERNATION,  USERCOUNTRY,
		              EMPLOYEENUMBER
		         FROM BG_ERP_HR_USER
		        WHERE USERNAME IS NOT NULL) T
		ON (U.SRC = 0 AND U.HRCODE = T.HRCODE)
		WHEN NOT MATCHED THEN
		  INSERT
		    (USERID,   HRCODE,     USERNAME,     USERALIAS,     SEX,     CARDID,
		     MOBILE,     PHONE,     EMAIL,     BIRTHDAY,     STATE,     HRDEPTNAME,
		     HRDEPTCODE,     JOBDATE,     POSTCODE,     POSTNAME,     STATION,     MAJOR,
		     EDU,     POSTALCODE,     TAX,     NATION,     ADDRESS,     COUNTRY,
		     EMPLOYEENUMBER,     SRC,     CREATE_USER,     CREATE_DATE,     UPDATE_USER,     UPDATE_DATE,
		     VALID)
		  VALUES
		    (SYS_GUID(),     T.HRCODE,     T.USERNAME,     T.USERALIAS,     T.SEX,     T.USERCARD,
		     T.USERPHONE,     T.USERTEL,     T.USEREMAIL,     T.BIRTHDATE,     T.USERSTATUS,     T.USERDEPTNAME,
		     T.USERDEPTCODE,     T.JOBDATE,     T.USERPOSTCODE,     T.USERPOSTNAME,     T.USERSTATION,     T.USERMAJOR,
		     T.USEREDU,     T.USERPOSTALCODE,     T.USERTAX,     T.USERNATION,     T.USERADDR,     T.USERCOUNTRY,
		     EMPLOYEENUMBER,     '0',     'admin',     SYSDATE,     'admin',     SYSDATE,     1)
		WHEN MATCHED THEN
		  UPDATE
		     SET 
		     	 U.USERALIAS      = T.USERALIAS,
		         U.SEX            = T.SEX,
		         U.CARDID         = T.USERCARD,
		         U.MOBILE         = T.USERPHONE,
		         U.PHONE          = T.USERTEL,
		         U.EMAIL          = T.USEREMAIL,
		         U.BIRTHDAY       = T.BIRTHDATE,
		         U.STATE          = T.USERSTATUS,
		     	 U.HRDEPTNAME     = T.USERDEPTNAME,
		         U.HRDEPTCODE     = T.USERDEPTCODE,
		         U.JOBDATE        = T.JOBDATE,
		         U.POSTCODE       = T.USERPOSTCODE,
		         U.POSTNAME       = T.USERPOSTNAME,
		         U.STATION        = T.USERSTATION,
		         U.MAJOR          = T.USERMAJOR,
		         U.EDU            = T.USEREDU,
		         U.POSTALCODE     = T.USERPOSTALCODE,
		         U.TAX            = T.USERTAX,
		         U.NATION         = T.USERNATION,
		         U.ADDRESS        = T.USERADDR,
		         U.COUNTRY        = T.USERCOUNTRY,
		         U.EMPLOYEENUMBER = T.EMPLOYEENUMBER,
		         U.UPDATE_USER    = 'admin',
		         U.UPDATE_DATE    = SYSDATE
	</update>
	<!-- 删除人HR员工的组织关系中间表 -->
	<delete id="deleteUserOrganRelation">
		DELETE FROM BG_ERP_HR_PA0001
	</delete>
	<!-- 同步HR员工的组织关系-->
	<insert id="addUserOrganRelation"  parameterType="Map">
		INSERT INTO BG_ERP_HR_PA0001
		     ( 
			  UUID,PERNR,BEGDA,ENDDA,AEDTM,
			  UNAME,BUKRS,WERKS,PERSG,
			  PERSK,BTRTL,ABKRS,KOSTL,
			  PLANS,SNAME,Z00HRYGXS,Z00HRYGXZ,
			  Z00HRRYLB,Z00HRRYZT,Z00HRGWZT,Z00HRZWJB,
			  Z00HRYWRQ,Z00HRSSDWID,Z00HRSSDW,Z00HRSSBMID,
			  Z00HRSSBM,Z00HRSSBZID,Z00HRSSBZ,SJC
 			 )
		  VALUES
		    ( SYS_GUID(),#{PERNR,jdbcType=VARCHAR},#{BEGDA,jdbcType=DATE},#{ENDDA,jdbcType=DATE},#{AEDTM,jdbcType=DATE},
		      #{UNAME,jdbcType=VARCHAR},#{BUKRS,jdbcType=VARCHAR},#{WERKS,jdbcType=VARCHAR},#{PERSG,jdbcType=VARCHAR},
		      #{PERSK,jdbcType=VARCHAR},#{BTRTL,jdbcType=VARCHAR},#{ABKRS,jdbcType=VARCHAR},#{KOSTL,jdbcType=VARCHAR},
		      #{PLANS,jdbcType=INTEGER},#{SNAME,jdbcType=VARCHAR},#{Z00HRYGXS,jdbcType=VARCHAR},#{Z00HRYGXZ,jdbcType=VARCHAR},
		      #{Z00HRRYLB,jdbcType=VARCHAR},#{Z00HRRYZT,jdbcType=VARCHAR},#{Z00HRGWZT,jdbcType=VARCHAR},#{Z00HRZWJB,jdbcType=VARCHAR},
		      #{Z00HRYWRQ,jdbcType=DATE},#{Z00HRSSDWID,jdbcType=VARCHAR},#{Z00HRSSDW,jdbcType=VARCHAR},#{Z00HRSSBMID,jdbcType=VARCHAR},
		      #{Z00HRSSBM,jdbcType=VARCHAR},#{Z00HRSSBZID,jdbcType=VARCHAR},#{Z00HRSSBZ,jdbcType=VARCHAR},SYSDATE
		      
		    )
	</insert>
	<!--先将所有erp同步过来的数据状态都置为失效  -->
	<update id="invalidHrUserOrganRelationData">
		UPDATE BG_SYS_USER_DEPT_RELATION R 
			SET R.VALID=0,R.UPDATE_USER='admin',R.UPDATE_DATE=SYSDATE
		 WHERE R.SRC = 0 
	</update>
	<!--更新HR员工的组织关系-->
	<!--人员关系临时表中某些领导没有处室id（默认00000000），当关联不到处室时，关联部门  -->
	<update id="syncHrUserOrganRelationData">
		MERGE INTO BG_SYS_USER_DEPT_RELATION A
		USING (SELECT U.USERID,
		              NVL(D.DEPTID, D1.DEPTID) AS DEPTID,
		              TO_DATE(TO_CHAR(P.BEGDA, 'yyyyMMdd'), 'yyyyMMdd') BEGIN_DATE,
		              TO_DATE(TO_CHAR(P.ENDDA, 'yyyyMMdd'), 'yyyyMMdd') END_DATE
		         FROM BG_ERP_HR_PA0001 P
		         LEFT JOIN BG_SYS_USER U
		           ON P.PERNR = U.HRCODE
		         LEFT JOIN BG_SYS_DEPT D
		           ON P.Z00HRSSBZID = D.DEPTCODE
		         LEFT JOIN BG_SYS_DEPT D1
		           ON P.Z00HRSSBMID = D1.DEPTCODE
		        WHERE 1=1
		        /*P.Z00HRSSDWID = '41000001'*/
		          AND P.BEGDA IS NOT NULL
		          AND P.ENDDA IS NOT NULL
		          AND U.USERID IS NOT NULL
		          AND NVL(D.DEPTID, D1.DEPTID) IS NOT NULL) B
		ON (A.SRC = 0 AND A.USERID = B.USERID AND A.DEPTID = B.DEPTID AND A.EXP_START_TIME = B.BEGIN_DATE AND A.EXP_END_TIME = B.END_DATE)
		WHEN MATCHED THEN
		  UPDATE SET A.VALID = 1, A.UPDATE_USER = 'admin', A.UPDATE_DATE = SYSDATE
		WHEN NOT MATCHED THEN
		  INSERT
		    (A.USERID,
		     A.DEPTID,
		     A.VALID,
		     A.EXP_START_TIME,
		     A.EXP_END_TIME,
		     A.SRC,
		     A.CREATE_USER,
		     A.CREATE_DATE,
		     A.UPDATE_USER,
		     A.UPDATE_DATE)
		  VALUES
		    (B.USERID,
		     B.DEPTID,
		     1,
		     B.BEGIN_DATE,
		     B.END_DATE,
		     '0',
		     'admin',
		     SYSDATE,
		     'admin',
		     SYSDATE)
	</update>
	<!--失效未同步的HR员工的组织关系-->
	<!-- <update id="invalidHrUserOrganRelationData">
		UPDATE BG_SYS_USER_DEPT_RELATION R SET R.VALID=0,R.UPDATE_USER='admin',R.UPDATE_DATE=SYSDATE
		 WHERE R.SRC = 0 
		  AND 
		  R.ROWID IN 
		 	(SELECT A.ROWID
                   FROM BG_SYS_USER_DEPT_RELATION A
                   JOIN BG_SYS_USER U
                     ON U.USERID = A.USERID
                   JOIN BG_SYS_DEPT D
                     ON D.DEPTID = A.DEPTID
                   LEFT JOIN BG_ERP_HR_PA0001 B
                     ON U.HRCODE = B.PERNR
                    AND D.DEPTCODE = B.Z00HRSSBZID
                    AND A.EXP_START_TIME =
                        TO_DATE(TO_CHAR(B.BEGDA, 'yyyyMMdd'), 'yyyyMMdd')
                    AND A.EXP_END_TIME =
                        TO_DATE(TO_CHAR(B.ENDDA, 'yyyyMMdd'), 'yyyyMMdd')
                  WHERE A.SRC = 0
                    AND B.PERNR IS NULL)
	</update> -->
<!-- ###################################################################################################################### -->	
	<!--更新ZHGL特殊机构-->
	<update id="syncZhglOrganData">
		MERGE INTO BG_SYS_DEPT A
		USING (SELECT ZD.ORGAN_CODE,
		              ZD.ORANG_NAME,
		              ZD.PARENT_CODE,
		              ZD.BEGIN_DATE,
		              ZD.END_DATE,
		              ZD.INNER_ORGAN_LEV_CODE
		         FROM BG_CEPRI_ZYSY_NEW_ORGAN ZD
		        WHERE NOT EXISTS (SELECT DEPTID
		                 FROM BG_SYS_DEPT
		                WHERE DEPTCODE = ZD.ORGAN_CODE
		                  AND SRC = 0
		                  AND VALID = 1)
		             --AND SYSDATE BETWEEN TO_DATE(ZD.BEGIN_DATE,'yyyyMMdd') AND TO_DATE(ZD.END_DATE,'yyyyMMdd') 
		          AND ZD.ISENABLE = '1') B
		ON (A.DEPTCODE = B.ORGAN_CODE)
		WHEN MATCHED THEN
		     UPDATE SET A.PDEPTCODE = B.PARENT_CODE,A.TYPE = B.INNER_ORGAN_LEV_CODE,A.UPDATE_USER = 'admin',A.UPDATE_DATE = SYSDATE,A.VALID = 1     
		WHEN NOT MATCHED THEN
		     INSERT (A.DEPTID,A.DEPTNAME,A.DEPTCODE,A.PDEPTCODE,A.TYPE,A.SRC,A.CREATE_USER,A.CREATE_DATE,A.UPDATE_USER,A.UPDATE_DATE,A.SORT_ID,A.VALID)
		     VALUES (B.ORGAN_CODE,B.ORANG_NAME,B.ORGAN_CODE,B.PARENT_CODE,B.INNER_ORGAN_LEV_CODE,'1','admin',SYSDATE,'admin',SYSDATE,NULL,1)
	</update>
	<!--更新ZHGL特殊员工-->
	<update id="syncZhglUserData">
		MERGE INTO BG_SYS_USER_DEPT_RELATION A
		USING (SELECT U.USERID,
		              P.EMP_CODE,
		              TO_DATE(P.BEGIN_DATE, 'yyyyMMdd') BEGIN_DATE,
		              TO_DATE(P.END_DATE, 'yyyyMMdd') END_DATE,
		              P.ST_DEPT_CODE,
		              P.ST_OFFICE_CODE
		         FROM BG_CEPRI_ZYSY_SPECIAL_EMP_INFO P
		         LEFT JOIN BG_SYS_USER U
		           ON P.EMP_CODE = U.HRCODE
		        WHERE U.USERID IS NOT NULL
		          AND ISENABLE = '1') B
		   ON (A.USERID = B.USERID AND A.DEPTID = B.ST_OFFICE_CODE AND A.EXP_START_TIME = B.BEGIN_DATE AND A.EXP_END_TIME = B.END_DATE)
		WHEN NOT MATCHED THEN
		     INSERT (A.USERID,A.DEPTID,A.VALID,A.EXP_START_TIME,A.EXP_END_TIME,A.SRC,A.CREATE_USER,A.CREATE_DATE,A.UPDATE_USER,A.UPDATE_DATE)
		     VALUES (B.USERID,B.ST_OFFICE_CODE,1,B.BEGIN_DATE,B.END_DATE,'1','admin',SYSDATE,'admin',SYSDATE)
	</update>
	<!--更新ZHGL部门排序-->
	<update id="syncZhglDeptOrderData">
		MERGE INTO BG_SYS_DEPT A
		USING (SELECT P.ORGAN_CODE, MAX(P.ORGAN_ORDER) ORGAN_ORDER
		         FROM BG_CEPRI_DHB_DEPT_ORDER P
		        WHERE ISENABLE = '1'
		        GROUP BY P.ORGAN_CODE) B
		ON (A.DEPTCODE = B.ORGAN_CODE)
		WHEN MATCHED THEN
		  UPDATE
		     SET A.SORT_ID     = B.ORGAN_ORDER,
		         A.UPDATE_USER = 'admin',
		         A.UPDATE_DATE = SYSDATE
	</update>
	<!--更新ZHGL单位排序-->
	<update id="syncZhglOfficeOrderData">
		MERGE INTO BG_SYS_DEPT A
		USING (SELECT P.PART_CODE, MAX(P.PART_ORDER) PART_ORDER
		         FROM BG_CEPRI_DHB_PART_ORDER P
		        WHERE ISENABLE = '1'
		        GROUP BY P.PART_CODE) B
		ON (A.DEPTCODE = B.PART_CODE)
		WHEN MATCHED THEN
		  UPDATE
		     SET A.SORT_ID     = B.PART_ORDER,
		         A.UPDATE_USER = 'admin',
		         A.UPDATE_DATE = SYSDATE
	</update>
	<!--更新ZHGL员工排序-->
	<update id="syncZhglUserOrderData">
		MERGE INTO BG_SYS_USER A
		USING (SELECT P.EMP_CODE, MAX(P.EMP_ORDER) EMP_ORDER
		         FROM BG_CEPRI_DHB_EMP_ORDER P
		        WHERE ISENABLE = '1'
		        GROUP BY P.EMP_CODE) B
		ON (A.HRCODE = B.EMP_CODE)
		WHEN MATCHED THEN
		  UPDATE
		     SET A.SORT_ID     = B.EMP_ORDER,
		         A.UPDATE_USER = 'admin',
		         A.UPDATE_DATE = SYSDATE
	</update>
</mapper>