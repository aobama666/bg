package com.sgcc.bg.yszx.controller;  import java.util.HashMap;import java.util.List;import java.util.Map;import javax.servlet.http.HttpServletRequest;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Controller;import org.springframework.web.bind.annotation.RequestBody;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.RequestMethod;import org.springframework.web.bind.annotation.ResponseBody;import com.alibaba.fastjson.JSON;import com.alibaba.fastjson.serializer.SerializerFeature;import com.sgcc.bg.common.PageHelper;import com.sgcc.bg.common.Rtext;import com.sgcc.bg.yszx.service.IdeaInfoService;  /** * @author cyj * 演示中心---数据字典的查询 */@Controller@RequestMapping(value = "IdeaInfo")public class IdeaInfoController {	@Autowired	private IdeaInfoService ideaInfoService;		/**	 *  演示中心---信息的预定	 * @param	 * @param	 * @return	 */	@ResponseBody	@RequestMapping(value = "/addIdeaInfo", method = RequestMethod.POST)	public String addIdeaInfo(@RequestBody Map<String, Object> paramsMap){		String  rw=ideaInfoService.addIdeaInfo(paramsMap);		return rw;	}	/**	 *  演示中心---数据字典的查询	 * @param	 * @param	 * @return	 */	@ResponseBody	@RequestMapping("/selectForLeader")	public String  selectForLeader(HttpServletRequest request) {		String  rw=ideaInfoService.selectForLeader(request);		return rw;			}	/**	 *  演示中心---根据用户id查询用户信息	 * @param	 * @param	 * @return	 */	@ResponseBody	@RequestMapping("/selectForuserName")	public String  selectForuserName(String userId) {		String  rw=ideaInfoService.selectForuserName(userId);		return rw;			}	@ResponseBody	@RequestMapping(value = "/selectIdeaInfo")	public String selectIdeaInfo(String applyId, String year,  String month, Integer page, Integer limit){		applyId=Rtext.toStringTrim(applyId, "");		year=Rtext.toStringTrim(year, "");		month=Rtext.toStringTrim(month, "");		List<Map<String, Object>> content = ideaInfoService.selectForIdeaInfo(applyId, year+"-"+month);		int start = 0;		int end = 30;		if(page != null && limit!=null){			start = (page-1)*limit;			end = page*limit;		}		PageHelper<Map<String, Object>>  pageHelper = new PageHelper<>(content, start, end);		Map<String, Object> jsonMap = new HashMap<String, Object>();		jsonMap.put("data", pageHelper.getResult());		jsonMap.put("total", pageHelper.getTotalNum());		jsonMap.put("msg", "success");		jsonMap.put("success", "true");		String jsonStr = JSON.toJSONStringWithDateFormat(jsonMap, "yyyy-MM-dd",				SerializerFeature.WriteDateUseDateFormat);		return jsonStr;	}	/**	 *  修改演示中心信息---参观人信息的删除	 * @param	 * @param	 * @return	 */	@ResponseBody	@RequestMapping(value = "/deleteVisitInfo", method = RequestMethod.POST)	public String deleteVisitInfo(String visitId){		String  rw=ideaInfoService.deleteVisitInfo(visitId);		return rw;	} 	/**	 *  修改演示中心信息---参观人信息的删除	 * @param	 * @param	 * @return	 */	@ResponseBody	@RequestMapping(value = "/deleteCompanyUserInfo", method = RequestMethod.POST)	public String deleteCompanyUserInfo(String companyId){		String  rw=ideaInfoService.deleteCompanyUserInfo(companyId);		return rw;	} 	/**	 *  修改演示中心信息---主页信息的删除	 * @param	 * @param	 * @return	 */	@ResponseBody	@RequestMapping(value = "/deleteIdeaInfo", method = RequestMethod.POST)	public String deleteIdeaInfo(String ideaId){		String  rw=ideaInfoService.deleteIdeaInfo(ideaId);		return rw;	} 	/**	 *  修改演示中心信息---主页信息的提交	 * @param	 * @param	 * @return	 */	@ResponseBody	@RequestMapping(value = "/submitForStatus", method = RequestMethod.POST)	public String submitForStatus(String ideaId,String approvalUserd){		String  rw=ideaInfoService.submitForStatus(ideaId,approvalUserd );		return rw;	} 	/**	 *  修改演示中心信息---主页信息的提交	 * @param	 * @param	 * @return	 */	@ResponseBody	@RequestMapping(value = "/repealForStatus", method = RequestMethod.POST)	public String repealForStatus(String ideaId){		String  rw=ideaInfoService.repealForStatus(ideaId);		return rw;	} 	 	@ResponseBody	@RequestMapping(value = "/selectForDealtInfo")	public String selectForDealtInfo(String appltNumber, String applyDept,  String contactUser, Integer page, Integer limit){		appltNumber=Rtext.toStringTrim(appltNumber, "");		applyDept=Rtext.toStringTrim(applyDept, "");		contactUser=Rtext.toStringTrim(contactUser, "");		List<Map<String, Object>> content = ideaInfoService.selectForDealtInfo(appltNumber, applyDept  ,contactUser);		int start = 0;		int end = 30;		if(page != null && limit!=null){			start = (page-1)*limit;			end = page*limit;		}		PageHelper<Map<String, Object>>  pageHelper = new PageHelper<>(content, start, end);		Map<String, Object> jsonMap = new HashMap<String, Object>();		jsonMap.put("data", pageHelper.getResult());		jsonMap.put("total", pageHelper.getTotalNum());		jsonMap.put("msg", "success");		jsonMap.put("success", "true");		String jsonStr = JSON.toJSONStringWithDateFormat(jsonMap, "yyyy-MM-dd",				SerializerFeature.WriteDateUseDateFormat);		return jsonStr;	}	@ResponseBody	@RequestMapping(value = "/selectForAlreadytInfo")	public String selectForAlreadytInfo(String appltNumber, String applyDept,  String contactUser, Integer page, Integer limit){		appltNumber=Rtext.toStringTrim(appltNumber, "");		applyDept=Rtext.toStringTrim(applyDept, "");		contactUser=Rtext.toStringTrim(contactUser, "");		List<Map<String, Object>> content = ideaInfoService.selectForAlreadytInfo(appltNumber, applyDept  ,contactUser);		int start = 0;		int end = 30;		if(page != null && limit!=null){			start = (page-1)*limit;			end = page*limit;		}		PageHelper<Map<String, Object>>  pageHelper = new PageHelper<>(content, start, end);		Map<String, Object> jsonMap = new HashMap<String, Object>();		jsonMap.put("data", pageHelper.getResult());		jsonMap.put("total", pageHelper.getTotalNum());		jsonMap.put("msg", "success");		jsonMap.put("success", "true");		String jsonStr = JSON.toJSONStringWithDateFormat(jsonMap, "yyyy-MM-dd",				SerializerFeature.WriteDateUseDateFormat);		return jsonStr;	}	@ResponseBody	@RequestMapping(value = "/selectComprehensiveInfo")	public String selectComprehensiveInfo(String applyId, String year,String month,String applyDept,String visitUserName,String userLevel,Integer page, Integer limit){		applyId=Rtext.toStringTrim(applyId, "");		year=Rtext.toStringTrim(year, "");		month=Rtext.toStringTrim(month, "");		List<Map<String, Object>> content = ideaInfoService.selectComprehensiveInfo(applyId, year+"-"+month ,applyDept,visitUserName,userLevel);		int start = 0;		int end = 30;		if(page != null && limit!=null){			start = (page-1)*limit;			end = page*limit;		}		PageHelper<Map<String, Object>>  pageHelper = new PageHelper<>(content, start, end);		Map<String, Object> jsonMap = new HashMap<String, Object>();		jsonMap.put("data", pageHelper.getResult());		jsonMap.put("total", pageHelper.getTotalNum());		jsonMap.put("msg", "success");		jsonMap.put("success", "true");		String jsonStr = JSON.toJSONStringWithDateFormat(jsonMap, "yyyy-MM-dd",				SerializerFeature.WriteDateUseDateFormat);		return jsonStr;	}}